[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/builder.js",
    "content": "import { Record, Map, List, fromJS, Set } from 'immutable';\nimport uuidv1 from 'uuid/v1';\nimport * as _ from \"lodash\";\nimport jsonpath from \"jsonpath\";\n\nimport { uriOracle, CompositeOracle, ProfileOracle } from './oracle';\n\n/**\n * @typedef {string} uri\n */\n/**\n * @typedef {string} uuid\n */\n/**\n * @typedef {Object} LanguageMap\n */\n/**\n * @typedef {{id: string, description: LanguageMap}} InteractionComponent\n */\n/**\n * @typedef {{id: uri, display: LanguageMap}} Verb\n */\n\n\nconst UUID_RE = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i\n\n/**\n* @ignore\n*/\nfunction capitalize(s) {\n    return s[0].toUpperCase() + s.slice(1);\n}\n\n/**\n* @ignore\n*/\nfunction adapt(concept) { // concept must be immutable Map\n    switch(concept.type) {\n        case 'Activity':\n            const definition = concept.activityDefinition.delete('@concept');\n            return {\n                id: concept.id,\n                objectType: 'Activity',\n                definition\n            };\n        case 'Verb':\n            return {\n                id: concept.id,\n                display: concept.prefLabel\n            };\n        default:\n            // these will only use the id, in this case\n            return concept;\n    }\n}\n\n/**\n* @ignore\n*/\nconst _BuilderRecord = Record({\n    map: Map(),\n    instanceIdentifier: null,  // contract: must be UUID\n    oracle: new CompositeOracle().add(uriOracle)\n});\n\n/**\n* The base class of most of the library, this provides a few utility data\n* structures and methods.\n*/\nclass BuilderRecord extends _BuilderRecord {\n\n    /**\n    * Make an instance of a Builder\n    *\n    * Don't call BuilderRecord.builder directly. Generally, call\n    * {@link StatementBuilder#builder} then access all the other builders from that\n    * Builder, as {@link StatementBuilder#activities},\n    * {@link StatementBuilder#agents}, or {@link StatementBuilder#attachments}.\n    * @param {?Object} value A plain javascript Object to start the Builder with\n    * @return {*} A Builder of the type called on.\n    */\n    static builder(value) {\n        const record = new this().set('instanceIdentifier', uuidv1());\n        if(value instanceof this) {\n            // already a real one, just return it\n            return value;\n        } else if(value instanceof BuilderRecord) {\n            // some other kind of Builder Record.\n            // NOTE: this is primarily to make SubStatements work right.\n            // Only pass builders to their subclasses.\n            return record.merge(value);\n        } else if(value) {\n            return record.merge(new Map({\n                map: new Map(value)\n            }));\n        } else {\n            return record;\n        }\n    }\n\n    /**\n    * @ignore\n    */\n    validate(js) {\n        // TODO: implement this in subclasses\n        // there doesn't seem to be a good JS xAPI validation library out there,\n        // especially not with a suitable license.\n        // Also consider, should we make it pluggable?\n        return;\n    }\n\n    /**\n    * @ignore\n    */\n    prebuild() {\n        return this;\n    }\n\n    /**\n    * Get the plain javascript object from this builder, ready to serialize\n    * into JSON\n    *\n    * Will throw an exception if the result does not validate (currently only\n    * xAPI Profile Statement Template validation occurs, not overall Statement\n    * validation).\n    * @return {Object} the plain javascript object constructed by this builder.\n    */\n    build() {\n        const js = this.prebuild().map.toJS();\n        this.validate(js);\n        return js;\n    }\n\n    /**\n    * _Without validating_, get the plain javascript object from this builder,\n    * ready to serialize into JSON\n    *\n    * @return {Object} the plain javascript object constructed by this builder.\n    */\n    unsafeBuild() {\n        return this.prebuild().map.toJS();\n    }\n\n    /**\n    * @ignore\n    */\n    lookup(identifier, objectType) {\n        const found = this.oracle.lookup(identifier, objectType);\n        if(found) {\n            return adapt(found);\n        } else {\n            throw new Error(\"No \" + objectType + \" found for: '\" + identifier + \"'\");\n        }\n    }\n}\n\nconst [SUCCESS, PARTIAL, FAILURE] = [2,1,0]\n\n\nexport class PatternRegistration extends BuilderRecord {\n\n    /**\n    * @ignore\n    */\n    static builder(profile_version, patterns, pattern) {\n        return super.builder({\n            profile_version,\n            patterns,\n            pattern: fromJS(pattern),\n            templates_so_far: []\n        });\n    }\n\n    /**\n    * @ignore\n    */\n    recordTemplate(template) {\n        this._checkNextMatch(template.id);\n        this.getIn(['map', 'templates_so_far']).push(template.id);\n    }\n\n    /**\n    * @ignore\n    */\n    _checkNextMatch(template) {\n        const sequence = [].concat(this.getIn(['map', 'templates_so_far']), template);\n        if(!this._sequencePossible(sequence, this.getIn(['map', 'pattern', 'id']))) {\n            throw new Error(`That template is not allowed next for the pattern ${this.getIn(['map', 'pattern', 'id'])}`);\n        }\n    }\n\n    /**\n    * @ignore\n    */\n    _sequencePossible(sequence, pattern) {\n        const {success, remaining} = this._matches(sequence, pattern);\n        switch(success) {\n            case SUCCESS:\n                return remaining.length == 0;\n            case PARTIAL:\n                return true;\n            case FAILURE:\n                return false;\n        }\n    }\n\n    /**\n    * @ignore\n    */\n    _matches(statements, element) {\n        const is_template = !this.hasIn(['map', 'patterns', element]);\n        if(is_template) {\n            if(statements.length == 0) {\n                return {\n                    success: PARTIAL,\n                    remaining: []\n                };\n            }\n            const [next, ...remaining] = statements;\n            if(next === element) {\n                return {\n                    success: SUCCESS,\n                    remaining\n                };\n            }\n            return {\n                success: FAILURE,\n                remaining: statements\n            };\n        }\n\n        const pattern = this.getIn(['map', 'patterns', element]);\n        if(pattern.has('sequence')) {\n            let [success, remaining] = [SUCCESS, statements];\n            for(let next of pattern.get('sequence')) {\n                ({success, remaining} = this._matches(remaining, next));\n                if(success === FAILURE) {\n                    return {\n                        success,\n                        remaining: statements\n                    }\n                }\n                if(success == PARTIAL) {\n                    return {\n                        success,\n                        remaining: []\n                    }\n                }\n            }\n            return {\n                success,\n                remaining\n            }\n        }\n        if(pattern.has('alternates')) {\n            let [success, remaining] = [FAILURE, statements];\n            for(let next of pattern.get('alternates')) {\n                const maybe = this._matches(statements, next);\n                if(maybe.success === SUCCESS) {\n                    success = SUCCESS;\n                    if(maybe.statements.length < remaining.length) {\n                        remaining = maybe.statements;\n                    }\n                }\n                if(maybe.success === PARTIAL && success === FAILURE) {\n                    success = PARTIAL\n                }\n            }\n            if(success === PARTIAL) {\n                return {\n                    success,\n                    remaining: []\n                };\n            }\n            return {\n                success,\n                remaining\n            };\n        }\n        if(pattern.has('oneOrMore')) {\n            let [success, remaining] = [FAILURE, statements];\n            let last_statements = remaining;\n            while(true) {\n                const maybe = this._matches(last_statements, pattern.get('oneOrMore'));\n                if(maybe.success === SUCCESS) {\n                    success = SUCCESS;\n                } else if(success === FAILURE && maybe.success === PARTIAL) {\n                    return {\n                        success: PARTIAL,\n                        remaining: []\n                    };\n                } else {\n                    if(maybe.success === PARTIAL && last_statements.length > 0) {\n                        return {\n                            success: PARTIAL,\n                            remaining: last_statements\n                        };\n                    } else {\n                        return {\n                            success,\n                            remaining: last_statements\n                        };\n                    }\n                }\n                if(remaining.length === last_statements.length) {\n                    return {\n                        success,\n                        remaining\n                    }\n                }\n                last_statements = remaining;\n            }\n        }\n        if(pattern.has('zeroOrMore')) {\n            let last_statements = statements;\n            while(true) {\n                const {success, remaining} = this._matches(last_statements, pattern.get('zeroOrMore'));\n                if(success === FAILURE) {\n                    return {\n                        success: SUCCESS,\n                        remaining: last_statements\n                    };\n                }\n                if(success === PARTIAL && remaining.length > 0) {\n                    return {\n                        success,\n                        remaining\n                    };\n                }\n                if(remaining.length === last_statements.length) {\n                    return {\n                        success: SUCCESS,\n                        remaining\n                    };\n                }\n                last_statements = remaining;\n            }\n        }\n        if(pattern.has('optional')) {\n            if(statements.length == 0) {\n                return {\n                    success: SUCCESS,\n                    remaining: []\n                };\n            }\n            let [success, remaining] = this._matches(statements, pattern.get('optional'));\n            if(success === SUCCESS || success === PARTIAL) {\n                return {\n                    success,\n                    remaining\n                };\n            } else {\n                return {\n                    success: SUCCESS,\n                    remaining: statements\n                };\n            }\n        }\n\n    }\n}\n\n/**\n* If you want to create Statements as parts of Patterns, start with a\n* ProfileRegistration, add Profiles using\n* {@link ProfileRegistration#withProfile}, create instances of Patterns with\n* {@link ProfileRegistration#pattern}, then create StatementBuilders that\n* follow Statement Templates with {@link ProfileRegistration#template}.\n*\n* @example\n* var registration = ProfileRegistration.builder().withProfile({\n*     ...profile object...\n* });\n*\n* var coursePattern = registration.pattern(\"Course Pattern\");\n*\n* var launched = registration.template(\"Launching\", coursePattern);\n*\n* launched = launched.with...\n* ...more additions to the StatementBuilder...\n*\n* my_send_statement_function(launched.build());\n*/\nexport class ProfileRegistration extends BuilderRecord {\n\n    /**\n    * @ignore\n    */\n    withOracle(oracle) {\n        return this.update('oracle', (main) => main.add(oracle));\n    }\n\n    /**\n    * Add an xAPI Profile to enable referring to terms by name instead of URI\n    * with later API calls\n    *\n    * The Profiles added here will also be available to StatementBuilders\n    * returned from {@link ProfileRegistration#template}\n    * @param {Object} profile a complete xAPI Profile as a JSON object.\n    * @return {ProfileRegistration} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withProfile(profile) {\n        const patterns = profile.patterns || [];\n        const current = [].concat(\n            profile.concepts || [], profile.templates || [], patterns\n        )[0].inScheme; // every concept, template, and patter must be inScheme\n        // of the current profile version\n        return this.withOracle(ProfileOracle.fromProfile(profile)).mergeDeepIn(\n            ['map', 'lookups'], {\n                profile_patterns: new Map(patterns.map(pattern =>\n                    [profile.id, new Map({[pattern.id]: fromJS(pattern)})])),\n                pattern_profiles: new Map(patterns.map(pattern =>\n                    [pattern.id, profile.id]\n                )),\n                current_versions: {\n                    [profile.id]: current\n                }\n            });\n    }\n\n    /**\n    * Make an opaque {@link PatternRegistration} object representing the Statements in\n    * one Pattern of a Profile\n    *\n    * Pass the {@link PatternRegistration} to\n    * {@link ProfileRegistration#template}.\n    * @param {string} name the name or id of a Pattern in a Profile\n    * registered with this object.\n    * @return {PatternRegistration} returns an opaque bookkeeping object.\n    * @throws {Error} if `name` does not match a name and is not uri-like.\n    */\n    pattern(name) {\n        const pattern = this.lookup(name, 'Pattern');\n        const profile = this.getIn(['map', 'lookups', 'pattern_profiles', pattern.id]);\n        // TODO missing value handling!\n        const patterns = this.getIn(['map', 'lookups', 'profile_patterns', profile])\n\n        // TODO okay, now need to work out the version of the profile...\n        const profile_version = this.getIn(['map', 'lookups', 'current_versions', profile]);\n        return PatternRegistration.builder(profile_version, patterns, pattern);\n    }\n\n    /**\n    * Make a {@link StatementBuilder} based on a Statement Template as part of\n    * an instance of a Pattern\n    *\n    * The returned Builder will validate itself on\n    * {@link StatementBuilder#build} against the requirements of the Statement\n    * Template. The StatementBuilder will be prefilled with a `registration`,\n    * a `subregistration` extension, and the profile version as a `context`\n    * `category`. Additionally, if the Statement Template has a `verb` or\n    * `objectActivityType`, the StatementBuilder will be prefilled with those\n    * as well (but not other determining properties).\n    * @param {string} name the name or id of a Statement Template in a Profile\n    * registered with this object.\n    * @param {PatternRegistration} pattern an opaque bookkeeping object.\n    * @param {Object|StatementBuilder} [base] a plain Javascript object or\n    * StatementBuilder to use as a base for the Statement.\n    * @return {StatementBuilder} the partially-completed Statement\n    * @throws {Error} if `name` does not match a name and is not uri-like, or if\n    * the chosen Statement Template cannot follow Statements produced\n    * from previous Statement Templates in the Pattern given.\n    */\n    template(name, pattern, base) {\n        const template = this.lookup(name, 'StatementTemplate');\n        pattern.recordTemplate(template);\n\n        const profile_id = pattern.map.get('profile_version');\n        return StatementBuilder.builder(\n            base\n        ).templated(\n            template\n        ).withRegistration(\n            this.instanceIdentifier\n        ).withContextExtension(\n            \"https://w3id.org/xapi/profiles/extensions/subregistration\",\n            [\n                {\n                    profile: profile_id,\n                    subregistration: pattern.instanceIdentifier\n                }\n            ]\n        ).withContextCategory(\n            ActivityBuilder.builder().withId(profile_id)\n        );\n        // TODO make it possible to provide multiples of name, pattern\n\n    }\n\n\n}\n\n/**\n* Use AgentBuilder to make Agents for use in your Statements, though you\n* mostly won't need to use it unless you're working with Groups. All non-member\n* Agents in Statements can be manipulated with StatementBuilder methods.\n*\n* When working with Statements you should generally get an AgentBuilder\n* instance by the {@link StatementBuilder#agents} property.\n*\n*/\nexport class AgentBuilder extends BuilderRecord {\n\n    /**\n    * Use `builder` to create instances of AgentBuilder.\n    *\n    * @example <caption>create an Agent with an mbox.</caption>\n    * let builder = AgentBuilder.builder();\n    * builder = builder.withEmail(\"nandita@example.gov\");\n    * console.log(builder.build());\n    * @param {Object} [value] A plain javascript Agent or Group.\n    * @return {AgentBuilder} A builder for xAPI Agents and Groups.\n    */\n    static builder(value) {\n        return super.builder(value).updateIn(['map', 'objectType'],\n            (v) => v || \"Agent\");\n    }\n\n    /**\n    * Add an `mbox` based on an email\n    *\n    * @param {string} email Email to use for the Agent/Group `mbox` property\n    * @return {AgentBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withEmail(email) {\n        return this.withMbox('mailto:' + email);\n    }\n\n    /**\n    * Add a personal or descriptive name for this Agent or Group\n    *\n    * @param {string} name Name to use for the Agent/Group `name` property.\n    * @return {AgentBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withName(name) {\n        return this.setIn(['map', 'name'], name);\n    }\n\n    /**\n    * Add the `homePage` URL of an `account`\n    *\n    * @param {uri} homePage URL to use for the Agent/Group `account`\n    * `homePage` property\n    * @return {AgentBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withHomePage(homePage) {\n        return this.set('map', this.map.withMutations(map => {\n            map.delete('account');\n            map.setIn(['account', 'homePage'], homePage);\n        }));\n    }\n\n    /**\n    * Add the `name` identifier of an `account`. This is a unique identifier\n    * the system identified by `homePage` links to a particular account.\n    *\n    * @param {string} name Name to use for the Agent/Group `account` `name`\n    * property.\n    * @return {AgentBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withAccountName(name) {\n        return this.setIn(['map', \"account\", \"name\"], name);\n    }\n\n    /**\n    * Makes this create a Group (AgentBuilder makes Agents by default).\n    *\n    * @return {AgentBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    asGroup() {\n        return this.setIn(['map', 'objectType'], 'Group');\n    }\n\n    /**\n    * Adds an Agent as a `member`. Makes this a Group if it isn't already.\n    * @param {Object} agent Another AgentBuilder or a plain Javascript object\n    * representing a complete Agent, to add to the `member` property.\n    * @return {AgentBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withMember(agent) {\n        const _agent = AgentBuilder.builder(agent);\n        return this.asGroup().updateIn(['map', 'member'],\n            (members = List()) => members.push(_agent.map));\n    }\n\n    /**\n    * @ignore\n    */\n    withIdentifier(ifi, value) {\n        return this.set('map', this.map.withMutations((map) => {\n            map.delete('mbox');\n            map.delete('mbox_sha1sum');\n            map.delete('openid');\n            map.delete('account');\n\n            map.set(ifi, fromJS(value));\n        }));\n    }\n\n    /**\n    * Identify this with an `mbox` (must start with `mailto:`!)\n    * @param {uri} mbox What to set the `mbox` to.\n    * @return {AgentBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withMbox(mbox) {\n        return this.withIdentifier('mbox', mbox);\n    }\n\n    /**\n    * Identify this with an `mbox_sha1sum`\n    * @param {string} sha1 What to set the `mbox_sha1sum` to.\n    * @return {AgentBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withMbox_sha1sum(sha1) {\n        return this.withIdentifier('mbox_sha1sum', sha1);\n    }\n\n    /**\n    * Identify this with an `openid`\n    * @param {uri} openid URI to set the `openid` to.\n    * @return {AgentBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withOpenid(openid) {\n        return this.withIdentifier('openid', openid);\n    }\n\n    /**\n    * Identify this with an `account`\n    * @param {{homePage: uri, name: string}} account object to set `account`\n    * to.\n    * @return {AgentBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withAccount(account) {\n        return this.withIdentifier('account', account);\n    }\n\n}\n\n/**\n* Use ActivityBuilder to make Activities, particularly ones you\n* plan to put in `context`, since StatementBuilder does not provide methods\n* to update them directly.\n*\n* When working with Statements you should generally get an ActivityBuilder\n* instance by the {@link StatementBuilder#activities} property.\n*\n* @example\n* var statement = StatementBuilder.builder().withProfile(....);\n*\n* // values passed to withId are looked up in Profiles\n* var topic = StatementBuilder.activities.withId(\"Biology\");\n*\n* statement = statement.withContextGrouping(topic);\n*\n* my_send_statement_function(statement.build());\n*/\nexport class ActivityBuilder extends BuilderRecord {\n\n    /**\n    * Use `builder` to create instances of ActivityBuilder.\n    * @param {Object} [value] A plain javascript Activity.\n    * @return {ActivityBuilder} A builder for xAPI Activities.\n    */\n    static builder(value) {\n        return super.builder(value).setIn(['map', 'objectType'], \"Activity\");\n    }\n\n    /**\n    * Set the Activity `id`\n    *\n    * If the `id` is not a URI but matches a name of an Activity in a Profile\n    * loaded by {@link StatementBuilder#withProfile}, the `id` of that Activity will\n    * be used.\n    * @param {uri|string} id URI to set the `id` to or name of an Activity from\n    * a Profile.\n    * @return {ActivityBuilder} returns the updated builder object. The original\n    * is unmodified.\n    * @throws {Error} if `id` does not match a name and is not uri-like.\n    */\n    withId(id) {\n        const activity = this.lookup(id, 'Activity');\n        return this.setIn(['map', 'id'], activity.id);\n    }\n\n    /**\n    * Makes the Activity look exactly as in the Profile it is from.\n    *\n    * If no `id` is provided but one is set for the Activity, that will be used.\n    * If the `id` is not a URI but matches a name of an Activity in a Profile\n    * loaded by {@link StatementBuilder#withProfile}, that Activity will\n    * be used.\n    * @param {uri|string} [id] URI or string to lookup the Activity with\n    * @return {ActivityBuilder} returns the updated builder object. The original\n    * is unmodified.\n    * @throws {Error} if `id` does not match a name and is not uri-like,\n    * or if no `id` is provided or present.\n    */\n    asProfile(id) {\n        if(!id) {\n            if(this.map.has('id')) {\n                id = this.map.get('id');\n            } else {\n                throw new Error(\"No id provided or already present\");\n            }\n        }\n        const activity = this.lookup(id, 'Activity');\n        return ActivityBuilder.builder(value).set(\"oracle\", this.oracle);\n    }\n\n    /**\n    * Set the Activity `type`\n    *\n    * If the `type` is not a URI but matches a name of an Activity Type in a\n    * Profile loaded by {@link StatementBuilder#withProfile}, the uri of that\n    * Activity Type will be used.\n    * @param {uri|string} type URI to set the `type` to.\n    * @return {ActivityBuilder} returns the updated builder object. The original\n    * is unmodified.\n    * @throws {Error} if `type` does not match a name and is not uri-like.\n    */\n    withType(type) {\n        const activityType = this.lookup(type, 'ActivityType');\n        return this.setIn(['map', 'definition', 'type'], activityType.id);\n    }\n\n    /**\n    * Add an extension to the Activity definition\n    *\n    * If the `key` is not a URI but matches a name of an Activity Extension in a\n    * Profile loaded by {@link StatementBuilder#withProfile}, the uri of that\n    * Activity Extension will be used.\n    * @param {uri|string} key URI key of the extension\n    * @param {*} value any JSON-legal data structure\n    * @return {ActivityBuilder} returns the updated builder object. The original\n    * is unmodified.\n    * @throws {Error} if `key` does not match a name and is not uri-like.\n    */\n    withExtension(key, value) {\n        const extension = this.lookup(key, 'ActivityExtension')\n        return this.setIn(['map', 'definition', 'extensions', extension.id], fromJS(value));\n    }\n\n    /**\n    * @ignore\n    */\n    withKey(key, value) {\n        return this.setIn(['map', 'definition', key], fromJS(value));\n    }\n\n    /**\n    * Add a `moreInfo` URL\n    *\n    * @param {uri} url URL to use for `moreInfo`.\n    * @return {ActivityBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withMoreInfo(url) {\n        return this.withKey('moreInfo', uri);\n    }\n\n    /**\n    * Add an `interactionType`\n    *\n    * @param {string} value `interactionType` to use.\n    * @return {ActivityBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withInteractionType(value) {\n        return this.withKey('interactionType', value);\n    }\n\n    /**\n    * Add possible `correctResponsesPattern` values\n    *\n    * @param {string[]} responses strings indicating possible\n    * `correctResponsesPattern` values\n    * @return {ActivityBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withCorrectResponsesPattern(responses) {\n        return this.withKey('correctResponsesPattern', responses);\n    }\n\n    /**\n    * Add available `choices` for this interaction\n    *\n    * @param {InteractionComponent[]} choices interaction components with string `id`\n    * and language map `description`\n    * @return {ActivityBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withChoices(choices) {\n        return this.withKey('choices', choices);\n    }\n\n    /**\n    * Add `scale` values for this interaction\n    *\n    * @param {InteractionComponent[]} scale interaction components with string `id`\n    * and language map `description`\n    * @return {ActivityBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withScale(scale) {\n        return this.withKey('scale', scale);\n    }\n\n    /**\n    * Add available `source` values for this interaction\n    *\n    * @param {InteractionComponent[]} source interaction components with string `id`\n    * and language map `description`\n    * @return {ActivityBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withSource(source) {\n        return this.withKey('source', source);\n    }\n\n    /**\n    * Add available `target` values for this interaction\n    *\n    * @param {InteractionComponent[]} target interaction components with string `id`\n    * and language map `description`\n    * @return {ActivityBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withTarget(target) {\n        return this.withKey('target', target);\n    }\n\n    /**\n    * Add available `steps` for this interaction\n    *\n    * @param {InteractionComponent[]} steps interaction components with string `id`\n    * and language map `description`\n    * @return {ActivityBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withSteps(steps) {\n        return this.withKey('steps', steps);\n    }\n\n    /**\n    * @ignore\n    */\n    withLanguageMap(key, language, value) {\n        return this.updateIn(['map', 'definition', key],\n            (languages = Map()) => languages.set(language, value));\n    }\n\n    /**\n    * Add a `name` for this Activity in a particular `language`\n    *\n    * @param {string} name the name of this Activity in that language.\n    * @param {string} language an RFC 5646 language tag, such as `en` or\n    * `zh-Hans`.\n    * @return {ActivityBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withName(name, language) {\n        return this.withLanguageMap('name', language, name);\n    }\n\n    /**\n    * Add a `definition` for this activity in a particular `language`\n    *\n    * @param {string} definition the definition of this Activity in that\n    * language.\n    * @param {string} language an RFC 5646 language tag, such as `en` or\n    * `zh-Hans`.\n    * @return {ActivityBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withDefinition(definition, language) {\n        return this.withLanguageMap('definition', language, definition);\n    }\n}\n\n\n/**\n* Use AttachmentBuilder to make Attachments for use in your Statements.\n*\n* When working with Statements you should generally get an AttachmentBuilder\n* instance by the {@link StatementBuilder#attachments} property.\n*\n* Note: currently this library does not handle Attachment bodies, though they\n* can still be added later, during Statement sending.\n*/\nexport class AttachmentBuilder extends BuilderRecord {\n\n    /**\n    * Provide a `usageType` uri\n    *\n    * If the `uri` is not a URI but matches a name of an Attachment Usage Type\n    * in a Profile loaded by {@link StatementBuilder#withProfile}, the uri of\n    * that Attachment Usage Type will be used.\n    * @param {uri|string} uri the attachment usage type\n    * @return {AttachmentBuilder} returns the updated builder object. The\n    * original is unmodified.\n    * @throws {Error} if `uri` does not match a name and is not uri-like.\n    */\n    withUsageType(uri) {\n        const usageType = this.lookup(uri, 'AttachmentUsageType');\n        return this.setIn(['map', 'usageType'], usageType.id);\n    }\n\n    /**\n    * @ignore\n    */\n    withKey(key, value) {\n        return this.setIn(['map', key], value);\n    }\n\n    /**\n    * Provide a `contentType` for the attachment, also called a media type or\n    * MIME type\n    *\n    * @param {string} contentType the attachment content type\n    * @return {AttachmentBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withContentType(contentType) {\n        return this.withKey('contentType', contentType);\n    }\n\n    /**\n    * Provide a `length` for the attachment in octets\n    *\n    * @param {integer} length the attachment length in octets\n    * @return {AttachmentBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withLength(length) {\n        return this.withKey('length', length);\n    }\n\n    /**\n    * Provide a `sha2` for the attachment\n    *\n    * This is the hexadecimal value of a hash from the SHA-2 family of hashes,\n    * with a bit-length of 224, 256, 384, or 512.\n    * @param {string} sha2 the attachment SHA-2 hash in hex\n    * @return {AttachmentBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withSha2(sha2) {\n        return this.withKey('sha2', sha2);\n    }\n\n    /**\n    * Provide a `fileUrl` where this attachment can be accessed\n    *\n    * The fileUrl does not need to public, but should be as accessible as\n    * possible.\n    * @param {uri} fileUrl a URL to retrieve the attachment from.\n    * @return {AttachmentBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withFileUrl(fileUrl) {\n        return this.withKey('fileUrl', fileUrl);\n    }\n\n    /**\n    * @ignore\n    */\n    withLanguageMap(key, language, value) {\n        return this.updateIn(['map', key],\n            (languages = Map()) => languages.set(language, value));\n    }\n\n    /**\n    * Add a `display` for this attachment in a particular `language`\n    *\n    * @param {string} display a short display value for this Attachment in that\n    * language.\n    * @param {string} language an RFC 5646 language tag, such as `en` or\n    * `zh-Hans`.\n    * @return {AttachmentBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withDisplay(display, language) {\n        return this.withLanguageMap('name', language, display);\n    }\n\n    /**\n    * Add a `description` for this attachment in a particular `language`\n    *\n    * @param {string} description a description for this Attachment in that\n    * language.\n    * @param {string} language an RFC 5646 language tag, such as `en` or\n    * `zh-Hans`.\n    * @return {AttachmentBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withDescription(description, language) {\n        return this.withLanguageMap('name', language, description);\n    }\n}\n\n\n/**\n* Use StatementBuilder to make Statements. If you're not planning to send\n* Statements according to a Profile Pattern, this is your starting point.\n*\n* @example\n* var statement = StatementBuilder.builder();\n*\n* statement = statement.withActorEmail(\n*     \"zhangwei@example.gov\"\n* ).withVerb(\n*     \"http://made.up.verb.example.com/desalinated\"\n* ).withObjectId(\n*     \"http://made.up.activity.example.com/PacificOcean\"\n* );\n*\n* console.log(statement.build());\n*/\nexport class StatementBuilder extends BuilderRecord {\n    /**\n    * @ignore\n    */\n    withOracle(oracle) {\n        return this.updateIn(['oracle'], (main) => main.add(oracle));\n    }\n\n    /**\n    * Add an xAPI Profile to enable referring to terms by name instead of URI\n    * with later API calls.\n    *\n    * @param {Object} profile a complete xAPI Profile as a JSON object.\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withProfile(profile) {\n        return this.withOracle(ProfileOracle.fromProfile(profile));\n    }\n\n    /**\n    * Add the `verb` for the Statement\n    *\n    * If the `verb` is not a verb object or a URI but matches a name of a Verb\n    * in a Profile loaded by {@link StatementBuilder#withProfile}, the complete\n    * Profile representation of that verb will be used. If a URI is provided\n    * will also attempt to load the complete Profile representation.\n    * @param {uri|string|Verb} verb the verb URI, name or object.\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    * @throws {Error} if `verb` does not match a name and is not uri-like or an\n    * object with an `id`.\n    */\n    withVerb(verb) {\n        const fullVerb = verb.id ? verb : this.lookup(verb, 'Verb');\n        return this.setIn(['map', 'verb'], fromJS(fullVerb));\n    }\n\n    /**\n    * Add the `verb` `display` for a particular `language`\n    *\n    * @param {string} language an RFC 5646 language tag, such as `en` or\n    * `zh-Hans`.\n    * @param {string} display a short display value for the verb in that\n    * language.\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withVerbDisplay(language, display) {\n        return this.updateIn(['map', 'verb', 'display'],\n            (languages = Map()) => languages.set(language, display));\n    }\n\n    /**\n    * Add the `object` for the Statement\n    *\n    * There are several possible ways to provide the `object`:\n    *   * As the UUID `id` of a Statement. The `object` will be set to a\n    * StatementRef with that `id`.\n    *   * As a name or URI of an Activity. If the Activity is found in a\n    * Profile loaded by {@link StatementBuilder#withProfile}, the complete\n    * Profile representation of that Activity will be used.\n    *   * As a builder from this library for an Agent, Group, or Activity.\n    *   * As a {@link StatementBuilder}, which will be used as a SubStatement\n    * according to the rules from the xAPI specification.\n    *   * as a complete simple javascript object of an Activity, Agent, Group,\n    * StatementRef, or SubStatement.\n    * @param\n    * {uuid|uri|string|StatementBuilder|AgentBuilder|ActivityBuilder|Object}\n    * object the `object` to use\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    * @throws {Error} if a string argument is not a UUID, does not match a name,\n    * and is not uri-like.\n    */\n    withObject(object) {\n        const path = ['map', 'object'];\n        if(UUID_RE.test(object)) {\n            return this.setIn(path, fromJS({\n                objectType: 'StatementRef',\n                id: object\n            }));\n        } else if(typeof object === 'string') {\n            const activity = this.lookup(object, 'Activity');\n            return this.setIn(path, fromJS(activity));\n        } else if(object instanceof BuilderRecord) {\n            if(object instanceof StatementBuilder) {\n                object = object.asSubStatement();\n            }\n            return this.setIn(path, object.map);\n        } else {\n            return this.setIn(path, fromJS(object));\n        }\n    }\n\n    /**\n    * Add an attachment to the Statement\n    *\n    * @param {Attachment} attachment an AttachmentBuilder or simple javascript\n    * object of an attachment.\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withAttachment(attachment) {\n        const full_attachment = AttachmentBuilder.builder(attachment);\n        return this.updateIn(['map', 'attachments'],\n            (attachments = List()) => attachments.insert(full_attachment));\n    }\n\n    /**\n    * Add a `context` `statement` as a StatementRef\n    *\n    * Accepts a StatementBuilder object, a simple javascript Statement or\n    * StatementRef object, or the uuid `id` of the Statement referred to.\n    * @param {uuid|Object} statement the Statement to refer to.\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withContextStatement(statement) {\n        let uuid;\n        if(typeof statement === 'string') {\n            uuid = statement;\n        } else if(statement instanceof BuilderRecord) {\n            uuid = statement.map.id;\n        } else {\n            uuid = statement.id;\n        }\n        return this.setIn(['map', 'context', 'statement'], fromJS({\n            id: uuid, objectType: 'StatementRef'\n        }));\n    }\n\n    /**\n    * @ignore\n    */\n    withPath(path, value) {\n        return this.setIn(['map'].concat(path), value);\n    }\n\n    /**\n    * Add the `id` for the Statement\n    *\n    * @param {uuid} uuid the `id`.\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withId(uuid) {\n        return this.withPath(['id'], uuid);\n    }\n\n    /**\n    * Add the ISO 8601 `timestamp` the Statement occurred\n    *\n    * @param {string} timestamp the `timestamp`.\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withTimestamp(timestamp) {\n        if(timestamp instanceof Date) {\n            timestamp = timestamp.toISOString();\n        }\n        return this.withPath(['timestamp'], timestamp);\n    }\n\n    /**\n    * Set the Statement as occurring at the current time.\n    *\n    * Note: when .build() is called to turn this into a Statement,\n    * if no `timestamp` is set the current time will be used.\n    * This method is for if the time the statement occurs is\n    * before some information is known for the Statement.\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withCurrentTimestamp() {\n        return this.withTimestamp(new Date().toISOString());\n    }\n\n    /**\n    * Add the ISO 8601 `stored` time for the Statement\n    *\n    * @param {string} timestamp the `stored` time.\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withStored(timestamp) {\n        return this.withPath(['stored'], timestamp);\n    }\n\n    /**\n    * Add the xAPI `version` of the Statement\n    *\n    * @param {string} version the `version`.\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withVersion(version) {\n        return this.withPath(['version'], version);\n    }\n\n\n    /**\n    * Add a score scaled to between -1 and 1 (inclusive) for the Statement\n    * `result`\n    *\n    * @param {number} score the score.\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withScaledScore(score) {\n        return this.withPath(['result', 'score', 'scaled'], score);\n    }\n\n    /**\n    * Add a raw score for the Statement `result`\n    *\n    * @param {number} score the score.\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withRawScore(score) {\n        return this.withPath(['result', 'score', 'raw'], score);\n    }\n\n    /**\n    * Add a minimum score bound (inclusive) for the raw score.\n    *\n    * @param {number} score the score.\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withMinScore(score) {\n        return this.withPath(['result', 'score', 'min'], score);\n    }\n\n    /**\n    * Add a maximum score bound (inclusive) for the raw score.\n    *\n    * @param {number} score the score.\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withMaxScore(score) {\n        return this.withPath(['result', 'score', 'max'], score);\n    }\n\n    /**\n    * Add a boolean `success` for the Statement `result`\n    *\n    * @param {boolean} success successful?\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withSuccess(success) {\n        return this.withPath(['result', 'success'], success);\n    }\n\n    /**\n    * Mark the Statement `result` as succeeding\n    *\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    asSucceeded() {\n        return this.withSuccess(true);\n    }\n\n    /**\n    * Mark the Statement `result` as failing\n    *\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    asFailed() {\n        return this.withSuccess(false);\n    }\n\n    /**\n    * Add a boolean `completion` for the Statement `result`\n    *\n    * @param {boolean} completion complete?\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withCompletion(completion) {\n        return this.withPath(['result', 'completion'], completion);\n    }\n\n    /**\n    * Mark the Statement `result` as complete\n    *\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    asComplete() {\n        return this.withCompletion(true);\n    }\n\n    /**\n    * Mark the Statement `result` as incomplete\n    *\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    asIncomplete() {\n        return this.withCompletion(false);\n    }\n\n    /**\n    * Add a `response` for the Statement `result`\n    *\n    * @param {string} response the `response`\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withResponse(response) {\n        return this.withPath(['result', 'response'], response);\n    }\n\n    /**\n    * Add an ISO 8601 `duration` for the Statement `result`\n    *\n    * If `duration` is a number, this will automatically convert it to a\n    * duration representation in seconds.\n    * @param {string|number} duration the `duration`\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withDuration(duration) {\n        if(typeof duration === 'number') {\n            duration = 'P' + number + 'S';\n        }\n        return this.withPath(['result', 'duration'], duration);\n    }\n\n\n    /**\n    * Add a `registration` for the Statement `context`\n    *\n    * @param {uuid} uuid the `registration`\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withRegistration(uuid) {\n        return this.withPath(['context', 'registration'], uuid);\n    }\n\n    /**\n    * Add a `revision` for the Statement `context`\n    *\n    * @param {string} revision the `revision`\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withRevision(revision) {\n        return this.withPath(['context', 'revision'], revision);\n    }\n\n    /**\n    * Add a `platform` for the Statement `context`\n    *\n    * @param {string} platform the `platform`\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withPlatform(platform) {\n        return this.withPath(['context', 'platform'], platform);\n    }\n\n    /**\n    * Add a `language` for the Statement `context`\n    *\n    * @param {string} language the `language`\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withLanguage(language) {\n        return this.withPath(['context', 'language'], language);\n    }\n\n    /**\n    * @ignore\n    */\n    withAgent(location, agent) {\n        agent = agent.map || fromJS(agent);\n        const path = ['map'].concat(location);\n        return this.setIn(path, agent);\n    }\n\n    /**\n    * Add the `actor` for the Statement\n    *\n    * There are two ways to provide the agent:\n    *   * As a AgentBuilder from this library.\n    *   * as a complete simple javascript object of an Agent or Group.\n    * @param {AgentBuilder|Object} agent the agent\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withActor(agent) {\n        return this.withAgent(['actor'], agent);\n    }\n\n    /**\n    * Add the `authority` for the Statement\n    *\n    * There are two ways to provide the agent:\n    *   * As a AgentBuilder from this library.\n    *   * as a complete simple javascript object of an Agent or Group.\n    * @param {AgentBuilder|Object} agent the agent\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withAuthority(agent) {\n        return this.withAgent(['authority'], agent);\n    }\n\n    /**\n    * Add the `instructor` to the `context` for the Statement\n    *\n    * There are two ways to provide the agent:\n    *   * As a AgentBuilder from this library.\n    *   * as a complete simple javascript object of an Agent or Group.\n    * @param {AgentBuilder|Object} agent the agent\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withInstructor(agent) {\n        return this.withAgent(['context', 'instructor'], agent);\n    }\n\n    /**\n    * Add the `team` to the `context` for the Statement\n    *\n    * There are two ways to provide the agent:\n    *   * As a AgentBuilder from this library.\n    *   * as a complete simple javascript object of an Agent or Group.\n    * @param {AgentBuilder|Object} agent the agent\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    withTeam(agent) {\n        return this.withAgent(['context', 'team'], agent);\n    }\n\n    /**\n    * @ignore\n    */\n    withAgentMethod(location, method, args) {\n        const path = ['map'].concat(location);\n        const agent = AgentBuilder.builder(this.getIn(path))[method](...args);\n        return this.setIn(path, agent.map);\n    }\n\n    /**\n    * Add an `mbox` to the `actor` based on an email\n    *\n    * @param {string} email Email to use for the Agent/Group `mbox` property\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withActorEmail(email) {\n        return this.withAgentMethod(['actor'], 'withEmail', arguments);\n    }\n\n    /**\n    * Add a personal or descriptive name for the `actor`\n    *\n    * @param {string} name Name to use for the Agent/Group `name` property.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withActorName(name) {\n        return this.withAgentMethod(['actor'], 'withName', arguments);\n    }\n\n    /**\n    * Add the `homePage` URL of an `account` to the `actor`\n    *\n    * @param {uri} homePage URL to use for the Agent/Group `account`\n    * `homePage` property\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withActorHomePage(homePage) {\n        return this.withAgentMethod(['actor'], 'withHomePage', arguments);\n    }\n\n    /**\n    * Add the `name` identifier of an `account` to the `actor`. This is a unique identifier\n    * the system identified by `homePage` links to a particular account.\n    *\n    * @param {string} name Name to use for the Agent/Group `account` `name`\n    * property.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withActorAccountName(name) {\n        return this.withAgentMethod(['actor'], 'withAccountName', arguments);\n    }\n\n    /**\n    * Makes the `actor` a Group.\n    *\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    actorAsGroup() {\n        return this.withAgentMethod(['actor'], 'asGroup', arguments);\n    }\n\n    /**\n    * Adds an Agent as a `member` of the `actor`.\n    *\n    * @param {Object} agent An AgentBuilder or a plain Javascript object\n    * representing a complete Agent, to add to the `member` property.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withActorMember(agent) {\n        return this.withAgentMethod(['actor'], 'withMember', arguments);\n    }\n\n\n    /**\n    * Identify this `actor` with an `mbox` (must start with `mailto:`!)\n    * @param {uri} mbox What to set the `mbox` to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withActorMbox(mbox) {\n        return this.withAgentMethod(['actor'], 'withMbox', arguments);\n    }\n\n    /**\n    * Identify this `actor` with an `mbox_sha1sum`\n    * @param {string} sha1 What to set the `mbox_sha1sum` to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withActorMbox_sha1sum(sha1) {\n        return this.withAgentMethod(['actor'], 'withMbox_sha1sum', arguments);\n    }\n\n    /**\n    * Identify this `actor` with an `openid`\n    * @param {uri} openid URI to set the `openid` to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withActorOpenid(openid) {\n        return this.withAgentMethod(['actor'], 'withOpenid', arguments);\n    }\n\n    /**\n    * Identify this `actor` with an `account`\n    * @param {{homePage: uri, name: string}} account object to set `account`\n    * to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withActorAccount(account) {\n        return this.withAgentMethod(['actor'], 'withAccount', arguments);\n    }\n\n    /**\n    * Add an `mbox` to the `authority` based on an email\n    *\n    * @param {string} email Email to use for the Agent/Group `mbox` property\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withAuthorityEmail(email) {\n        return this.withAgentMethod(['authority'], 'withEmail', arguments);\n    }\n\n    /**\n    * Add a personal or descriptive name for the `authority`\n    *\n    * @param {string} name Name to use for the Agent/Group `name` property.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withAuthorityName(name) {\n        return this.withAgentMethod(['authority'], 'withName', arguments);\n    }\n\n    /**\n    * Add the `homePage` URL of an `account` to the `authority`\n    *\n    * @param {uri} homePage URL to use for the Agent/Group `account`\n    * `homePage` property\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withAuthorityHomePage(homePage) {\n        return this.withAgentMethod(['authority'], 'withHomePage', arguments);\n    }\n\n    /**\n    * Add the `name` identifier of an `account` to the `authority`. This is a unique identifier\n    * the system identified by `homePage` links to a particular account.\n    *\n    * @param {string} name Name to use for the Agent/Group `account` `name`\n    * property.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withAuthorityAccountName(name) {\n        return this.withAgentMethod(['authority'], 'withAccountName', arguments);\n    }\n\n    /**\n    * Makes the `authority` a Group.\n    *\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    authorityAsGroup() {\n        return this.withAgentMethod(['authority'], 'asGroup', arguments);\n    }\n\n    /**\n    * Adds an Agent as a `member` of the `authority`.\n    *\n    * @param {Object} agent An AgentBuilder or a plain Javascript object\n    * representing a complete Agent, to add to the `member` property.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withAuthorityMember(agent) {\n        return this.withAgentMethod(['authority'], 'withMember', arguments);\n    }\n\n\n    /**\n    * Identify this `authority` with an `mbox` (must start with `mailto:`!)\n    * @param {uri} mbox What to set the `mbox` to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withAuthorityMbox(mbox) {\n        return this.withAgentMethod(['authority'], 'withMbox', arguments);\n    }\n\n    /**\n    * Identify this `authority` with an `mbox_sha1sum`\n    * @param {string} sha1 What to set the `mbox_sha1sum` to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withAuthorityMbox_sha1sum(sha1) {\n        return this.withAgentMethod(['authority'], 'withMbox_sha1sum', arguments);\n    }\n\n    /**\n    * Identify this `authority` with an `openid`\n    * @param {uri} openid URI to set the `openid` to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withAuthorityOpenid(openid) {\n        return this.withAgentMethod(['authority'], 'withOpenid', arguments);\n    }\n\n    /**\n    * Identify this `authority` with an `account`\n    * @param {{homePage: uri, name: string}} account object to set `account`\n    * to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withAuthorityAccount(account) {\n        return this.withAgentMethod(['authority'], 'withAccount', arguments);\n    }\n\n    /**\n    * Add an `mbox` to the `team` based on an email\n    *\n    * @param {string} email Email to use for the Agent/Group `mbox` property\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withTeamEmail(email) {\n        return this.withAgentMethod(['context', 'team'], 'withEmail', arguments);\n    }\n\n    /**\n    * Add a personal or descriptive name for the `team`\n    *\n    * @param {string} name Name to use for the Agent/Group `name` property.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withTeamName(name) {\n        return this.withAgentMethod(['context', 'team'], 'withName', arguments);\n    }\n\n    /**\n    * Add the `homePage` URL of an `account` to the `team`\n    *\n    * @param {uri} homePage URL to use for the Agent/Group `account`\n    * `homePage` property\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withTeamHomePage(homePage) {\n        return this.withAgentMethod(['context', 'team'], 'withHomePage', arguments);\n    }\n\n    /**\n    * Add the `name` identifier of an `account` to the `team`. This is a unique identifier\n    * the system identified by `homePage` links to a particular account.\n    *\n    * @param {string} name Name to use for the Agent/Group `account` `name`\n    * property.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withTeamAccountName(name) {\n        return this.withAgentMethod(['context', 'team'], 'withAccountName', arguments);\n    }\n\n    /**\n    * Makes the `team` a Group.\n    *\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    teamAsGroup() {\n        return this.withAgentMethod(['context', 'team'], 'asGroup', arguments);\n    }\n\n    /**\n    * Adds an Agent as a `member` of the `team`.\n    *\n    * @param {Object} agent An AgentBuilder or a plain Javascript object\n    * representing a complete Agent, to add to the `member` property.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withTeamMember(agent) {\n        return this.withAgentMethod(['context', 'team'], 'withMember', arguments);\n    }\n\n\n    /**\n    * Identify this `team` with an `mbox` (must start with `mailto:`!)\n    * @param {uri} mbox What to set the `mbox` to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withTeamMbox(mbox) {\n        return this.withAgentMethod(['context', 'team'], 'withMbox', arguments);\n    }\n\n    /**\n    * Identify this `team` with an `mbox_sha1sum`\n    * @param {string} sha1 What to set the `mbox_sha1sum` to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withTeamMbox_sha1sum(sha1) {\n        return this.withAgentMethod(['context', 'team'], 'withMbox_sha1sum', arguments);\n    }\n\n    /**\n    * Identify this `team` with an `openid`\n    * @param {uri} openid URI to set the `openid` to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withTeamOpenid(openid) {\n        return this.withAgentMethod(['context', 'team'], 'withOpenid', arguments);\n    }\n\n    /**\n    * Identify this `team` with an `account`\n    * @param {{homePage: uri, name: string}} account object to set `account`\n    * to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withTeamAccount(account) {\n        return this.withAgentMethod(['context', 'team'], 'withAccount', arguments);\n    }\n\n    /**\n    * Add an `mbox` to the `instructor` based on an email\n    *\n    * @param {string} email Email to use for the Agent/Group `mbox` property\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withInstructorEmail(email) {\n        return this.withAgentMethod(['context', 'instructor'], 'withEmail', arguments);\n    }\n\n    /**\n    * Add a personal or descriptive name for the `instructor`\n    *\n    * @param {string} name Name to use for the Agent/Group `name` property.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withInstructorName(name) {\n        return this.withAgentMethod(['context', 'instructor'], 'withName', arguments);\n    }\n\n    /**\n    * Add the `homePage` URL of an `account` to the `instructor`\n    *\n    * @param {uri} homePage URL to use for the Agent/Group `account`\n    * `homePage` property\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withInstructorHomePage(homePage) {\n        return this.withAgentMethod(['context', 'instructor'], 'withHomePage', arguments);\n    }\n\n    /**\n    * Add the `name` identifier of an `account` to the `instructor`. This is a unique identifier\n    * the system identified by `homePage` links to a particular account.\n    *\n    * @param {string} name Name to use for the Agent/Group `account` `name`\n    * property.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withInstructorAccountName(name) {\n        return this.withAgentMethod(['context', 'instructor'], 'withAccountName', arguments);\n    }\n\n    /**\n    * Makes the `instructor` a Group.\n    *\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    instructorAsGroup() {\n        return this.withAgentMethod(['context', 'instructor'], 'asGroup', arguments);\n    }\n\n    /**\n    * Adds an Agent as a `member` of the `instructor`.\n    *\n    * @param {Object} agent An AgentBuilder or a plain Javascript object\n    * representing a complete Agent, to add to the `member` property.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withInstructorMember(agent) {\n        return this.withAgentMethod(['context', 'instructor'], 'withMember', arguments);\n    }\n\n\n    /**\n    * Identify this `instructor` with an `mbox` (must start with `mailto:`!)\n    * @param {uri} mbox What to set the `mbox` to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withInstructorMbox(mbox) {\n        return this.withAgentMethod(['context', 'instructor'], 'withMbox', arguments);\n    }\n\n    /**\n    * Identify this `instructor` with an `mbox_sha1sum`\n    * @param {string} sha1 What to set the `mbox_sha1sum` to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withInstructorMbox_sha1sum(sha1) {\n        return this.withAgentMethod(['context', 'instructor'], 'withMbox_sha1sum', arguments);\n    }\n\n    /**\n    * Identify this `instructor` with an `openid`\n    * @param {uri} openid URI to set the `openid` to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withInstructorOpenid(openid) {\n        return this.withAgentMethod(['context', 'instructor'], 'withOpenid', arguments);\n    }\n\n    /**\n    * Identify this `instructor` with an `account`\n    * @param {{homePage: uri, name: string}} account object to set `account`\n    * to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withInstructorAccount(account) {\n        return this.withAgentMethod(['context', 'instructor'], 'withAccount', arguments);\n    }\n\n    /**\n    * Add an `mbox` to the `object` based on an email\n    *\n    * @param {string} email Email to use for the Agent/Group `mbox` property\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectEmail(email) {\n        return this.withAgentMethod(['object'], 'withEmail', arguments);\n    }\n\n    /**\n    * Add the `homePage` URL of an `account` to the `object`\n    *\n    * @param {uri} homePage URL to use for the Agent/Group `account`\n    * `homePage` property\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectHomePage(homePage) {\n        return this.withAgentMethod(['object'], 'withHomePage', arguments);\n    }\n\n    /**\n    * Add the `name` identifier of an `account` to the `object`. This is a unique identifier\n    * the system identified by `homePage` links to a particular account.\n    *\n    * @param {string} name Name to use for the Agent/Group `account` `name`\n    * property.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectAccountName(name) {\n        return this.withAgentMethod(['object'], 'withAccountName', arguments);\n    }\n\n    /**\n    * Makes the `object` a Group.\n    *\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    objectAsGroup() {\n        return this.withAgentMethod(['object'], 'asGroup', arguments);\n    }\n\n    /**\n    * Adds an Agent as a `member` of the `object`.\n    *\n    * @param {Object} agent An AgentBuilder or a plain Javascript object\n    * representing a complete Agent, to add to the `member` property.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectMember(agent) {\n        return this.withAgentMethod(['object'], 'withMember', arguments);\n    }\n\n\n    /**\n    * Identify this `object` with an `mbox` (must start with `mailto:`!)\n    * @param {uri} mbox What to set the `mbox` to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectMbox(mbox) {\n        return this.withAgentMethod(['object'], 'withMbox', arguments);\n    }\n\n    /**\n    * Identify this `object` with an `mbox_sha1sum`\n    * @param {string} sha1 What to set the `mbox_sha1sum` to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectMbox_sha1sum(sha1) {\n        return this.withAgentMethod(['object'], 'withMbox_sha1sum', arguments);\n    }\n\n    /**\n    * Identify this `object` with an `openid`\n    * @param {uri} openid URI to set the `openid` to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectOpenid(openid) {\n        return this.withAgentMethod(['object'], 'withOpenid', arguments);\n    }\n\n    /**\n    * Identify this `object` with an `account`\n    * @param {{homePage: uri, name: string}} account object to set `account`\n    * to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectAccount(account) {\n        return this.withAgentMethod(['object'], 'withAccount', arguments);\n    }\n\n\n    /**\n    * @ignore\n    */\n    withActivityMethod(method, args) {\n        const path = ['map', 'object'];\n        const activity = ActivityBuilder.builder(this.getIn(path))[method](...args);\n        return this.setIn(path, activity.map);\n    }\n\n    /**\n    * Set an Activity `object` `id`\n    *\n    * If the `id` is not a URI but matches a name of an Activity in a Profile\n    * loaded by {@link StatementBuilder#withProfile}, the `id` of that Activity will\n    * be used.\n    * @param {uri|string} id URI to set the `id` to or name of an Activity from\n    * a Profile.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    * @throws {Error} if `id` does not match a name and is not uri-like.\n    */\n    withObjectId(id) {\n        return this.withActivityMethod('withId', arguments);\n    }\n\n    /**\n    * Makes the Activity object look exactly as in the Profile it is from.\n    *\n    * If no `id` is provided but one is set for the Activity, that will be used.\n    * If the `id` is not a URI but matches a name of an Activity in a Profile\n    * loaded by {@link StatementBuilder#withProfile}, that Activity will\n    * be used.\n    * @param {uri|string} [id] URI or string to lookup the Activity with\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    * @throws {Error} if `id` does not match a name and is not uri-like,\n    * or if no `id` is provided or present.\n    */\n    withObjectAsProfile(id) {\n        return this.withActivityMethod('asProfile', arguments);\n    }\n\n    /**\n    * Set the Activity `object` `type`\n    *\n    * If the `type` is not a URI but matches a name of an Activity Type in a\n    * Profile loaded by {@link StatementBuilder#withProfile}, the uri of that\n    * Activity Type will be used.\n    * @param {uri|string} type URI to set the `type` to.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    * @throws {Error} if `type` does not match a name and is not uri-like.\n    */\n    withObjectType(type) {\n        return this.withActivityMethod('withType', arguments);\n    }\n\n    /**\n    * Add an extension to the Activity `object` `definition`\n    *\n    * If the `key` is not a URI but matches a name of an Activity Extension in a\n    * Profile loaded by {@link StatementBuilder#withProfile}, the uri of that\n    * Activity Extension will be used.\n    * @param {uri|string} key URI key of the extension\n    * @param {*} value any JSON-legal data structure\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    * @throws {Error} if `key` does not match a name and is not uri-like.\n    */\n    withObjectExtension(key, value) {\n        return this.withActivityMethod('withExtension', arguments);\n    }\n\n\n    /**\n    * Add a `moreInfo` URL to an Activity `object`\n    *\n    * @param {uri} url URL to use for `moreInfo`.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectMoreInfo(url) {\n        return this.withActivityMethod('withMoreInfo', arguments);\n    }\n\n    /**\n    * Add an `interactionType` to an Activity `object`\n    *\n    * @param {string} value `interactionType` to use.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectInteractionType(value) {\n        return this.withActivityMethod('withInteractionType', arguments);\n    }\n\n    /**\n    * Add possible `correctResponsesPattern` values to an Activity `object`\n    *\n    * @param {string[]} responses strings indicating possible\n    * `correctResponsesPattern` values\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectCorrectResponsesPattern(responses) {\n        return this.withActivityMethod('withCorrectResponsesPattern', arguments);\n    }\n\n    /**\n    * Add available `choices` for this interaction to an Activity `object`\n    *\n    * @param {InteractionComponent[]} choices interaction components with string `id`\n    * and language map `description`\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectChoices(choices) {\n        return this.withActivityMethod('withChoices', arguments);\n    }\n\n    /**\n    * Add `scale` values for this interaction to an Activity `object`\n    *\n    * @param {InteractionComponent[]} scale interaction components with string `id`\n    * and language map `description`\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectScale(scale) {\n        return this.withActivityMethod('withScale', arguments);\n    }\n\n    /**\n    * Add available `source` values for this interaction to an Activity `object`\n    *\n    * @param {InteractionComponent[]} source interaction components with string `id`\n    * and language map `description`\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectSource(source) {\n        return this.withActivityMethod('withSource', arguments);\n    }\n\n    /**\n    * Add available `target` values for this interaction to an Activity `object`\n    *\n    * @param {InteractionComponent[]} target interaction components with string `id`\n    * and language map `description`\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectTarget(target) {\n        return this.withActivityMethod('withTarget', arguments);\n    }\n\n    /**\n    * Add available `steps` for this interaction to an Activity `object`\n    *\n    * @param {InteractionComponent[]} steps interaction components with string `id`\n    * and language map `description`\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectSteps(steps) {\n        return this.withActivityMethod('withSteps', arguments);\n    }\n\n\n    /**\n    * Add a `definition` for this Activity `object` in a particular `language`\n    *\n    * @param {string} definition the definition of this Activity in that\n    * language.\n    * @param {string} language an RFC 5646 language tag, such as `en` or\n    * `zh-Hans`.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectDefinition(definition, language) {\n        return this.withActivityMethod('withDefinition', arguments);\n    }\n\n\n\n\n\n\n    /**\n    * Add a name for the `object` -- a personal or descriptive name\n    * for an Agent or Group, or the name of an Activity in a `language`\n    *\n    * @param {string} name The language-specific name for an Activity or the\n    * Agent/Group name.\n    * @param {string} [language] an RFC 5646 language tag, such as `en` or\n    * `zh-Hans`. Must use for Activity objects, must not use for Agents.\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    */\n    withObjectName(name, language) {\n        if(arguments.length == 1) {\n            return this.withAgentMethod(['object'], 'withName', arguments);\n        } else {\n            return this.withActivityMethod('withName', arguments);\n        }\n    }\n\n\n    /**\n    * @ignore\n    */\n    withContextActivity(variety, activity) {\n        const path = ['map', 'context', 'contextActivities', variety];\n        let full_activity;\n        if(typeof activity === 'string') {\n            full_activity = fromJS(this.lookup(activity, 'Activity'));\n        } else if(activity instanceof BuilderRecord) {\n            full_activity = activity.map;\n        } else {\n            full_activity = fromJS(activity);\n        }\n        return this.updateIn(path,\n            (activities = List()) => activities.push(full_activity));\n    }\n\n\n    /**\n    * Add an Activity to the `category` `contextActivities` in `context`\n    *\n    * There are several possible ways to provide the Activity:\n    *   * As a name or URI of an Activity. If the Activity is found in a\n    * Profile loaded by {@link StatementBuilder#withProfile}, the complete\n    * Profile representation of that Activity will be used.\n    *   * As a builder from this library for an Activity.\n    *   * as a complete simple javascript object of an Activity.\n    * @param {uri|string|Object} activity the Activity to use\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    * @throws {Error} if a string activity does not match a name and is not\n    * uri-like.\n    */\n    withContextCategory(activity) {\n        return this.withContextActivity('category', activity);\n    }\n\n    /**\n    * Add an Activity to the `parent` `contextActivities` in `context`\n    *\n    * There are several possible ways to provide the Activity:\n    *   * As a name or URI of an Activity. If the Activity is found in a\n    * Profile loaded by {@link StatementBuilder#withProfile}, the complete\n    * Profile representation of that Activity will be used.\n    *   * As a builder from this library for an Activity.\n    *   * as a complete simple javascript object of an Activity.\n    * @param {uri|string|Object} activity the Activity to use\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    * @throws {Error} if a string activity does not match a name and is not\n    * uri-like.\n    */\n    withContextParent(activity) {\n        return this.withContextActivity('parent', activity);\n    }\n\n    /**\n    * Add an Activity to the `grouping` `contextActivities` in `context`\n    *\n    * There are several possible ways to provide the Activity:\n    *   * As a name or URI of an Activity. If the Activity is found in a\n    * Profile loaded by {@link StatementBuilder#withProfile}, the complete\n    * Profile representation of that Activity will be used.\n    *   * As a builder from this library for an Activity.\n    *   * as a complete simple javascript object of an Activity.\n    * @param {uri|string|Object} activity the Activity to use\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    * @throws {Error} if a string activity does not match a name and is not\n    * uri-like.\n    */\n    withContextGrouping(activity) {\n        return this.withContextActivity('grouping', activity);\n    }\n\n    /**\n    * Add an Activity to the `other` `contextActivities` in `context`\n    *\n    * There are several possible ways to provide the Activity:\n    *   * As a name or URI of an Activity. If the Activity is found in a\n    * Profile loaded by {@link StatementBuilder#withProfile}, the complete\n    * Profile representation of that Activity will be used.\n    *   * As a builder from this library for an Activity.\n    *   * as a complete simple javascript object of an Activity.\n    * @param {uri|string|Object} activity the Activity to use\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    * @throws {Error} if a string activity does not match a name and is not\n    * uri-like.\n    */\n    withContextOther(activity) {\n        return this.withContextActivity('other', activity);\n    }\n\n\n    /**\n    * @ignore\n    */\n    withExtension(location, key, value) {\n        const extension = this.lookup(key, capitalize(location) + 'Extension')\n        return this.setIn(['map', location, extension.id], fromJS(value));\n    }\n\n    /**\n    * Add an extension to the `context`\n    *\n    * If the `key` is not a URI but matches a name of a Context Extension in a\n    * Profile loaded by {@link StatementBuilder#withProfile}, the uri of that\n    * Context Extension will be used.\n    * @param {uri|string} key URI key of the extension\n    * @param {*} value any JSON-legal data structure\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    * @throws {Error} if `key` does not match a name and is not uri-like.\n    */\n    withContextExtension(key, value) {\n        return this.withExtension('context', key, value);\n    }\n\n\n    /**\n    * Add an extension to the `result`\n    *\n    * If the `key` is not a URI but matches a name of a Result Extension in a\n    * Profile loaded by {@link StatementBuilder#withProfile}, the uri of that\n    * Result Extension will be used.\n    * @param {uri|string} key URI key of the extension\n    * @param {*} value any JSON-legal data structure\n    * @return {StatementBuilder} returns the updated builder object. The original\n    * is unmodified.\n    * @throws {Error} if `key` does not match a name and is not uri-like.\n    */\n    withResultExtension(key, value) {\n        return this.withExtension('result', key, value);\n    }\n\n\n\n\n    /**\n    * Makes this create a SubStatement (StatementBuilder makes Statements by\n    * default)\n    *\n    * You do not have to call this to use a StatementBuilder as a SubStatement.\n    * Just pass another StatementBuilder to {@link StatementBuilder#withObject}\n    * and the conversion will be handled automatically.\n    * @return {StatementBuilder} returns the updated builder object. The\n    * original is unmodified.\n    */\n    asSubStatement() {\n        return SubStatementBuilder.builder(this.setIn(\n            // required objectType\n            ['map', 'objectType'], 'SubStatement'\n        ).update(\n            'map', (map) => map.deleteAll([\n                // get rid of illegal SubStatement properties\n                'id',\n                'timestamp',\n                'version',\n                'authority'\n            ])\n        ));\n    }\n\n    /**\n    * An ActivityBuilder derived from this StatementBuilder, knowing about\n    * all the same Profiles.\n    *\n    * @type {ActivityBuilder}\n    */\n    get activities() {\n        return ActivityBuilder.builder().set('oracle', this.oracle);\n    }\n\n\n    /**\n    * An AgentBuilder derived from this StatementBuilder, knowing about\n    * all the same Profiles.\n    *\n    * @type {AgentBuilder}\n    */\n    get agents() {\n        return AgentBuilder.builder().set('oracle', this.oracle);\n    }\n\n    /**\n    * An AttachmentBuilder derived from this StatementBuilder, knowing about\n    * all the same Profiles.\n    *\n    * @type {AttachmentBuilder}\n    */\n    get attachments() {\n        return AttachmentBuilder.builder().set('oracle', this.oracle);\n    }\n\n    /**\n    * @ignore\n    */\n    prebuild() {\n        return BuilderRecord.builder({\n            id: uuidv1(),\n            timestamp: new Date().toISOString()\n        }).merge(this);  // overwrites with existing id/timestamp if present\n    }\n\n    /**\n    * Make this Statement follow the rules of a Statement template\n    *\n    * If the Statement Template has `verb` or `objectActivityType` determining\n    * properties, those are set on the Statement. When the Statement is built,\n    * all the rules of the Statement Template are checked, as well as the\n    * presence of all the determining properties.\n    *\n    * @param {uri|string|Object} template the URI, name, or full javascript\n    * object representation of a Statement Template.\n    * @returns {StatementBuilder} a Statement Template-validating\n    * StatementBuilder\n    * @throws {Error} if a uri or string is passed in and there is no matching\n    * Statement Template.\n    */\n    templated(template) {\n        if(typeof template === 'string') {\n            template = this.lookup(template, 'StatementTemplate');\n            // TODO error handling beyond provided by lookup?\n        }\n\n        let statement = this;\n\n        if(template.verb) {\n            statement = statement.withVerb(template.verb);\n        }\n        if(template.objectActivityType) {\n            statement = statement.withObjectType(template.objectActivityType);\n        }\n\n        const TemplateBuilder = class extends StatementBuilder {\n\n            _error(message) {\n                throw new Error(\"For template \" + template.id + \", \" + message);\n            }\n\n            _multipath(js, expressions) {\n                return [].concat(\n                    ...expressions.map((expression) =>\n                        jsonpath.query(js, expression)\n                    )\n                );\n            }\n\n            _ruleDescription(rule) {\n                if(rule.selector) {\n                    return `${rule.location} (each refined with ${rule.selector})`;\n                } else {\n                    return rule.location;\n                }\n            }\n\n            _checkRule(js, rule) {\n                const description = this._ruleDescription(rule);\n                // TODO real parsing here for those rare | inside rule cases\n                const locations = _.split(rule.location, '|');\n                const values = this._multipath(js, locations);\n                let has_unmatchable = false;\n                let matchables = values;\n                if(rule.selector) {\n                    // override the above with the results of selection\n                    // TODO break all this top stuff into a nice function\n                    // TODO do we need to handle the case where\n                    // the selector is run on a non-object? If so,\n                    // what's the right way to proceed? If we don't,\n                    // jsonpath.query will error, as it only works on\n                    // objects.\n                    const selectors = _.split(rule.selector, '|');\n                    const selected = values.map((value) =>\n                        this._multipath(value, selectors)\n                    );\n                    has_unmatchable = !_.isEmpty(selected.filter(_.isEmpty));\n                    matchables = [].concat(...selected);\n                }\n\n                if(rule.presence === 'included') {\n                    if(_.isEmpty(matchables)) {\n                        this._error(`${description} must include at least one value, but does not`);\n                    }\n                    if(has_unmatchable) {\n                        this._error(`${description} must not include any unmatchable values, but does`);\n                    }\n                } else if(rule.presence === 'excluded') {\n                    if(!_.isEmpty(matchables)) {\n                        this._error(`${description} must not include any values, but does`);\n                    }\n                }\n                if(!rule.presence ||\n                    rule.presence === 'included' ||\n                    (rule.presence === 'recommended' && !_.isEmpty(matchables))) {\n                    if(rule.any && _.isEmpty(_.intersection(rule.any, matchables))) {\n                        this._error(`${description} must have at least one value from ${_.join(rule.any)}`);\n                    }\n                    if(rule.all) {\n                        if(!_.isEmpty(_.difference(rule.all, matchables))) {\n                            this._error(`${description} must not include any values that aren't from ${_.join(rule.all)}`);\n                        }\n                        if(has_unmatchable) {\n                            this._error(`${description} must not include any unmatchable values, but does`);\n                        }\n                    }\n                    if(rule.none && !_.isEmpty(_.intersection(rule.none, matchables))) {\n                        this._error(`${description} must not include any of ${_.join(rule.none)}, but does`);\n                    }\n                }\n\n            }\n\n            validate(js) {\n                super.validate(js);\n                // TODO add proactive validation of this vs all other\n                // templates in the profile! Those still matter for conformance\n                // though probably have that controlled by function caller\n                // here, and only automatic in the PatternRegistration.template\n                // call.\n                if(template.verb && template.verb != _.get(js, 'verb.id')) {\n                    this._error(`verb id must be ${template.verb}`);\n                }\n                if(template.objectActivityType && template.objectActivityType != _.get(js, 'object.definition.type')) {\n                    this._error(`object activity type must be ${template.objectActivityType}`);\n                }\n                for(let name of [\"parent\", \"category\", \"grouping\", \"other\"]) {\n                    const capitalized = capitalize(name);\n                    if(template[\"context${capitalized}ActivityType\"]) {\n                        const required = template[\"context${capitalized}ActivityType\"];\n                        const present = _.get(js, 'context.contextActivities.${name}', []).map((activity) =>\n                            _.get(activity, 'definition.type')\n                        );\n                        const missing = _.difference(required, present);\n                        if(!_.isEmpty(missing)) {\n                            this._error(`${name} context activity types must include all of ${_.join(missing)}`);\n                        }\n                    }\n                }\n                if(template.attachmentUsageType) {\n                    const missing = _.difference(template.attachmentUsageType,\n                        _.get(js, 'attachments', []).map((attachment) => attachment.usageType)\n                    );\n                    if(!_.isEmpty(missing)) {\n                        this._error(`attachment usage types must include all of ${_.join(missing)}`);\n                    }\n                }\n                if(template.objectStatementRefTemplate && \"StatementRef\" != _.get(js, 'object.objectType')) {\n                    this._error(\"object must be a StatementRef\");\n                }\n                if(template.contextStatementRefTemplate && !_.get(js, 'context.statement')) {\n                    this._error(\"the context statement must be present\");\n                }\n                if(template.rules) {\n                    for(let rule of template.rules) {\n                        this._checkRule(js, rule);\n                    }\n                }\n            }\n        }\n\n\n        return TemplateBuilder.builder(statement);\n    }\n}\n\n/**\n* This class is returned when {@link StatementBuilder#asSubStatement} is called.\n* It makes sure the disallowed SubStatement properties (id, timestamp, version,\n* and authority) are not set.\n*/\nexport class SubStatementBuilder extends StatementBuilder {\n\n    /**\n    * @ignore\n    */\n    withId() {\n        throw new Error(\"That property not allowed in SubStatements\");\n    }\n\n    /**\n    * @ignore\n    */\n    withTimestamp() {\n        throw new Error(\"That property not allowed in SubStatements\");\n    }\n\n    /**\n    * @ignore\n    */\n    withVersion() {\n        throw new Error(\"That property not allowed in SubStatements\");\n    }\n\n    /**\n    * @ignore\n    */\n    withAuthority() {\n        throw new Error(\"That property not allowed in SubStatements\");\n    }\n\n    /**\n    * @ignore\n    */\n    withAgentMethod(location) {\n        if(location[0] === 'authority') {\n            throw new Error(\"That property not allowed in SubStatements\");\n        }\n        return super.withAgentMethod(...arguments);\n    }\n}\n",
    "static": true,
    "longname": "/Users/rduhon/Documents/xapi-statement-builder/src/builder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "typedef",
    "name": "uri",
    "memberof": "src/builder.js",
    "static": true,
    "longname": "src/builder.js~uri",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "string"
      ],
      "optional": false,
      "name": "uri"
    }
  },
  {
    "__docId__": 50,
    "kind": "typedef",
    "name": "uuid",
    "memberof": "src/builder.js",
    "static": true,
    "longname": "src/builder.js~uuid",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "string"
      ],
      "optional": false,
      "name": "uuid"
    }
  },
  {
    "__docId__": 51,
    "kind": "typedef",
    "name": "LanguageMap",
    "memberof": "src/builder.js",
    "static": true,
    "longname": "src/builder.js~LanguageMap",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "LanguageMap"
    }
  },
  {
    "__docId__": 52,
    "kind": "typedef",
    "name": "InteractionComponent",
    "memberof": "src/builder.js",
    "static": true,
    "longname": "src/builder.js~InteractionComponent",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "{id: string, description: LanguageMap}"
      ],
      "optional": false,
      "name": "InteractionComponent"
    }
  },
  {
    "__docId__": 53,
    "kind": "typedef",
    "name": "Verb",
    "memberof": "src/builder.js",
    "static": true,
    "longname": "src/builder.js~Verb",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "type": {
      "types": [
        "{id: uri, display: LanguageMap}"
      ],
      "optional": false,
      "name": "Verb"
    }
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "capitalize",
    "memberof": "src/builder.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/builder.js~capitalize",
    "access": "public",
    "export": false,
    "importPath": "xapi-statement-builder/src/builder.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 30,
    "ignore": true,
    "params": [
      {
        "name": "s",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "adapt",
    "memberof": "src/builder.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/builder.js~adapt",
    "access": "public",
    "export": false,
    "importPath": "xapi-statement-builder/src/builder.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 37,
    "ignore": true,
    "params": [
      {
        "name": "concept",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "_BuilderRecord",
    "memberof": "src/builder.js",
    "static": true,
    "longname": "src/builder.js~_BuilderRecord",
    "access": "private",
    "export": false,
    "importPath": "xapi-statement-builder/src/builder.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 60,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "class",
    "name": "BuilderRecord",
    "memberof": "src/builder.js",
    "static": true,
    "longname": "src/builder.js~BuilderRecord",
    "access": "public",
    "export": false,
    "importPath": "xapi-statement-builder/src/builder.js",
    "importStyle": null,
    "description": "The base class of most of the library, this provides a few utility data\nstructures and methods.",
    "lineNumber": 70,
    "interface": false,
    "extends": [
      "_BuilderRecord"
    ],
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "builder",
    "memberof": "src/builder.js~BuilderRecord",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/builder.js~BuilderRecord.builder",
    "access": "public",
    "description": "Make an instance of a Builder\n\nDon't call BuilderRecord.builder directly. Generally, call\n{@link StatementBuilder#builder} then access all the other builders from that\nBuilder, as {@link StatementBuilder#activities},\n{@link StatementBuilder#agents}, or {@link StatementBuilder#attachments}.",
    "lineNumber": 82,
    "params": [
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "A plain javascript Object to start the Builder with"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "A Builder of the type called on."
    }
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "validate",
    "memberof": "src/builder.js~BuilderRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~BuilderRecord#validate",
    "access": "public",
    "description": "",
    "lineNumber": 104,
    "ignore": true,
    "params": [
      {
        "name": "js",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "prebuild",
    "memberof": "src/builder.js~BuilderRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~BuilderRecord#prebuild",
    "access": "public",
    "description": "",
    "lineNumber": 115,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "build",
    "memberof": "src/builder.js~BuilderRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~BuilderRecord#build",
    "access": "public",
    "description": "Get the plain javascript object from this builder, ready to serialize\ninto JSON\n\nWill throw an exception if the result does not validate (currently only\nxAPI Profile Statement Template validation occurs, not overall Statement\nvalidation).",
    "lineNumber": 128,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the plain javascript object constructed by this builder."
    },
    "params": []
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "unsafeBuild",
    "memberof": "src/builder.js~BuilderRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~BuilderRecord#unsafeBuild",
    "access": "public",
    "description": "_Without validating_, get the plain javascript object from this builder,\nready to serialize into JSON",
    "lineNumber": 140,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the plain javascript object constructed by this builder."
    },
    "params": []
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "lookup",
    "memberof": "src/builder.js~BuilderRecord",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~BuilderRecord#lookup",
    "access": "public",
    "description": "",
    "lineNumber": 147,
    "ignore": true,
    "params": [
      {
        "name": "identifier",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectType",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "name": "SUCCESS",
    "memberof": "src/builder.js",
    "static": true,
    "longname": "src/builder.js~SUCCESS",
    "access": "public",
    "export": false,
    "importPath": "xapi-statement-builder/src/builder.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 157,
    "undocument": true,
    "type": {
      "types": [
        "number[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 65,
    "kind": "class",
    "name": "PatternRegistration",
    "memberof": "src/builder.js",
    "static": true,
    "longname": "src/builder.js~PatternRegistration",
    "access": "public",
    "export": true,
    "importPath": "xapi-statement-builder/src/builder.js",
    "importStyle": "{PatternRegistration}",
    "description": null,
    "lineNumber": 160,
    "undocument": true,
    "interface": false,
    "extends": [
      "BuilderRecord"
    ]
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "builder",
    "memberof": "src/builder.js~PatternRegistration",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/builder.js~PatternRegistration.builder",
    "access": "public",
    "description": "",
    "lineNumber": 165,
    "ignore": true,
    "params": [
      {
        "name": "profile_version",
        "types": [
          "*"
        ]
      },
      {
        "name": "patterns",
        "types": [
          "*"
        ]
      },
      {
        "name": "pattern",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "recordTemplate",
    "memberof": "src/builder.js~PatternRegistration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~PatternRegistration#recordTemplate",
    "access": "public",
    "description": "",
    "lineNumber": 177,
    "ignore": true,
    "params": [
      {
        "name": "template",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "_checkNextMatch",
    "memberof": "src/builder.js~PatternRegistration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~PatternRegistration#_checkNextMatch",
    "access": "private",
    "description": "",
    "lineNumber": 185,
    "ignore": true,
    "params": [
      {
        "name": "template",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "_sequencePossible",
    "memberof": "src/builder.js~PatternRegistration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~PatternRegistration#_sequencePossible",
    "access": "private",
    "description": "",
    "lineNumber": 195,
    "ignore": true,
    "params": [
      {
        "name": "sequence",
        "types": [
          "*"
        ]
      },
      {
        "name": "pattern",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "_matches",
    "memberof": "src/builder.js~PatternRegistration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~PatternRegistration#_matches",
    "access": "private",
    "description": "",
    "lineNumber": 210,
    "ignore": true,
    "params": [
      {
        "name": "statements",
        "types": [
          "*"
        ]
      },
      {
        "name": "element",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"success\": *, \"remaining\": *}"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "class",
    "name": "ProfileRegistration",
    "memberof": "src/builder.js",
    "static": true,
    "longname": "src/builder.js~ProfileRegistration",
    "access": "public",
    "export": true,
    "importPath": "xapi-statement-builder/src/builder.js",
    "importStyle": "{ProfileRegistration}",
    "description": "If you want to create Statements as parts of Patterns, start with a\nProfileRegistration, add Profiles using\n{@link ProfileRegistration#withProfile}, create instances of Patterns with\n{@link ProfileRegistration#pattern}, then create StatementBuilders that\nfollow Statement Templates with {@link ProfileRegistration#template}.",
    "examples": [
      "var registration = ProfileRegistration.builder().withProfile({\n    ...profile object...\n});\n\nvar coursePattern = registration.pattern(\"Course Pattern\");\n\nvar launched = registration.template(\"Launching\", coursePattern);\n\nlaunched = launched.with...\n...more additions to the StatementBuilder...\n\nmy_send_statement_function(launched.build());"
    ],
    "lineNumber": 384,
    "interface": false,
    "extends": [
      "BuilderRecord"
    ]
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "withOracle",
    "memberof": "src/builder.js~ProfileRegistration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ProfileRegistration#withOracle",
    "access": "public",
    "description": "",
    "lineNumber": 389,
    "ignore": true,
    "params": [
      {
        "name": "oracle",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "withProfile",
    "memberof": "src/builder.js~ProfileRegistration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ProfileRegistration#withProfile",
    "access": "public",
    "description": "Add an xAPI Profile to enable referring to terms by name instead of URI\nwith later API calls\n\nThe Profiles added here will also be available to StatementBuilders\nreturned from {@link ProfileRegistration#template}",
    "lineNumber": 403,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "profile",
        "description": "a complete xAPI Profile as a JSON object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ProfileRegistration"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "pattern",
    "memberof": "src/builder.js~ProfileRegistration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ProfileRegistration#pattern",
    "access": "public",
    "description": "Make an opaque {@link PatternRegistration} object representing the Statements in\none Pattern of a Profile\n\nPass the {@link PatternRegistration} to\n{@link ProfileRegistration#template}.",
    "lineNumber": 433,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name or id of a Pattern in a Profile\nregistered with this object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PatternRegistration"
      ],
      "spread": false,
      "description": "returns an opaque bookkeeping object."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if `name` does not match a name and is not uri-like."
      }
    ]
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "template",
    "memberof": "src/builder.js~ProfileRegistration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ProfileRegistration#template",
    "access": "public",
    "description": "Make a {@link StatementBuilder} based on a Statement Template as part of\nan instance of a Pattern\n\nThe returned Builder will validate itself on\n{@link StatementBuilder#build} against the requirements of the Statement\nTemplate. The StatementBuilder will be prefilled with a `registration`,\na `subregistration` extension, and the profile version as a `context`\n`category`. Additionally, if the Statement Template has a `verb` or\n`objectActivityType`, the StatementBuilder will be prefilled with those\nas well (but not other determining properties).",
    "lineNumber": 465,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name or id of a Statement Template in a Profile\nregistered with this object."
      },
      {
        "nullable": null,
        "types": [
          "PatternRegistration"
        ],
        "spread": false,
        "optional": false,
        "name": "pattern",
        "description": "an opaque bookkeeping object."
      },
      {
        "nullable": null,
        "types": [
          "Object",
          "StatementBuilder"
        ],
        "spread": false,
        "optional": true,
        "name": "base",
        "description": "a plain Javascript object or\nStatementBuilder to use as a base for the Statement."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "the partially-completed Statement"
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if `name` does not match a name and is not uri-like, or if\nthe chosen Statement Template cannot follow Statements produced\nfrom previous Statement Templates in the Pattern given."
      }
    ]
  },
  {
    "__docId__": 76,
    "kind": "class",
    "name": "AgentBuilder",
    "memberof": "src/builder.js",
    "static": true,
    "longname": "src/builder.js~AgentBuilder",
    "access": "public",
    "export": true,
    "importPath": "xapi-statement-builder/src/builder.js",
    "importStyle": "{AgentBuilder}",
    "description": "Use AgentBuilder to make Agents for use in your Statements, though you\nmostly won't need to use it unless you're working with Groups. All non-member\nAgents in Statements can be manipulated with StatementBuilder methods.\n\nWhen working with Statements you should generally get an AgentBuilder\ninstance by the {@link StatementBuilder#agents} property.",
    "lineNumber": 503,
    "interface": false,
    "extends": [
      "BuilderRecord"
    ]
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "builder",
    "memberof": "src/builder.js~AgentBuilder",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/builder.js~AgentBuilder.builder",
    "access": "public",
    "description": "Use `builder` to create instances of AgentBuilder.",
    "examples": [
      "<caption>create an Agent with an mbox.</caption>\nlet builder = AgentBuilder.builder();\nbuilder = builder.withEmail(\"nandita@example.gov\");\nconsole.log(builder.build());"
    ],
    "lineNumber": 515,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "value",
        "description": "A plain javascript Agent or Group."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AgentBuilder"
      ],
      "spread": false,
      "description": "A builder for xAPI Agents and Groups."
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "withEmail",
    "memberof": "src/builder.js~AgentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AgentBuilder#withEmail",
    "access": "public",
    "description": "Add an `mbox` based on an email",
    "lineNumber": 527,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "Email to use for the Agent/Group `mbox` property"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AgentBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "withName",
    "memberof": "src/builder.js~AgentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AgentBuilder#withName",
    "access": "public",
    "description": "Add a personal or descriptive name for this Agent or Group",
    "lineNumber": 538,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name to use for the Agent/Group `name` property."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AgentBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "withHomePage",
    "memberof": "src/builder.js~AgentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AgentBuilder#withHomePage",
    "access": "public",
    "description": "Add the `homePage` URL of an `account`",
    "lineNumber": 550,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "homePage",
        "description": "URL to use for the Agent/Group `account`\n`homePage` property"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AgentBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "withAccountName",
    "memberof": "src/builder.js~AgentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AgentBuilder#withAccountName",
    "access": "public",
    "description": "Add the `name` identifier of an `account`. This is a unique identifier\nthe system identified by `homePage` links to a particular account.",
    "lineNumber": 566,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name to use for the Agent/Group `account` `name`\nproperty."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AgentBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "asGroup",
    "memberof": "src/builder.js~AgentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AgentBuilder#asGroup",
    "access": "public",
    "description": "Makes this create a Group (AgentBuilder makes Agents by default).",
    "lineNumber": 576,
    "return": {
      "nullable": null,
      "types": [
        "AgentBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    },
    "params": []
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "withMember",
    "memberof": "src/builder.js~AgentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AgentBuilder#withMember",
    "access": "public",
    "description": "Adds an Agent as a `member`. Makes this a Group if it isn't already.",
    "lineNumber": 587,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "agent",
        "description": "Another AgentBuilder or a plain Javascript object\nrepresenting a complete Agent, to add to the `member` property."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AgentBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "withIdentifier",
    "memberof": "src/builder.js~AgentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AgentBuilder#withIdentifier",
    "access": "public",
    "description": "",
    "lineNumber": 596,
    "ignore": true,
    "params": [
      {
        "name": "ifi",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "withMbox",
    "memberof": "src/builder.js~AgentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AgentBuilder#withMbox",
    "access": "public",
    "description": "Identify this with an `mbox` (must start with `mailto:`!)",
    "lineNumber": 613,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "mbox",
        "description": "What to set the `mbox` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AgentBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "withMbox_sha1sum",
    "memberof": "src/builder.js~AgentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AgentBuilder#withMbox_sha1sum",
    "access": "public",
    "description": "Identify this with an `mbox_sha1sum`",
    "lineNumber": 623,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sha1",
        "description": "What to set the `mbox_sha1sum` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AgentBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "withOpenid",
    "memberof": "src/builder.js~AgentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AgentBuilder#withOpenid",
    "access": "public",
    "description": "Identify this with an `openid`",
    "lineNumber": 633,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "openid",
        "description": "URI to set the `openid` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AgentBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "withAccount",
    "memberof": "src/builder.js~AgentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AgentBuilder#withAccount",
    "access": "public",
    "description": "Identify this with an `account`",
    "lineNumber": 644,
    "params": [
      {
        "nullable": null,
        "types": [
          "{homePage: uri, name: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "account",
        "description": "object to set `account`\nto."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AgentBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 89,
    "kind": "class",
    "name": "ActivityBuilder",
    "memberof": "src/builder.js",
    "static": true,
    "longname": "src/builder.js~ActivityBuilder",
    "access": "public",
    "export": true,
    "importPath": "xapi-statement-builder/src/builder.js",
    "importStyle": "{ActivityBuilder}",
    "description": "Use ActivityBuilder to make Activities, particularly ones you\nplan to put in `context`, since StatementBuilder does not provide methods\nto update them directly.\n\nWhen working with Statements you should generally get an ActivityBuilder\ninstance by the {@link StatementBuilder#activities} property.",
    "examples": [
      "var statement = StatementBuilder.builder().withProfile(....);\n\n// values passed to withId are looked up in Profiles\nvar topic = StatementBuilder.activities.withId(\"Biology\");\n\nstatement = statement.withContextGrouping(topic);\n\nmy_send_statement_function(statement.build());"
    ],
    "lineNumber": 668,
    "interface": false,
    "extends": [
      "BuilderRecord"
    ]
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "builder",
    "memberof": "src/builder.js~ActivityBuilder",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/builder.js~ActivityBuilder.builder",
    "access": "public",
    "description": "Use `builder` to create instances of ActivityBuilder.",
    "lineNumber": 675,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "value",
        "description": "A plain javascript Activity."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ActivityBuilder"
      ],
      "spread": false,
      "description": "A builder for xAPI Activities."
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "withId",
    "memberof": "src/builder.js~ActivityBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ActivityBuilder#withId",
    "access": "public",
    "description": "Set the Activity `id`\n\nIf the `id` is not a URI but matches a name of an Activity in a Profile\nloaded by {@link StatementBuilder#withProfile}, the `id` of that Activity will\nbe used.",
    "lineNumber": 691,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "URI to set the `id` to or name of an Activity from\na Profile."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ActivityBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if `id` does not match a name and is not uri-like."
      }
    ]
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "asProfile",
    "memberof": "src/builder.js~ActivityBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ActivityBuilder#asProfile",
    "access": "public",
    "description": "Makes the Activity look exactly as in the Profile it is from.\n\nIf no `id` is provided but one is set for the Activity, that will be used.\nIf the `id` is not a URI but matches a name of an Activity in a Profile\nloaded by {@link StatementBuilder#withProfile}, that Activity will\nbe used.",
    "lineNumber": 709,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri",
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "id",
        "description": "URI or string to lookup the Activity with"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ActivityBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if `id` does not match a name and is not uri-like,\nor if no `id` is provided or present."
      }
    ]
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "withType",
    "memberof": "src/builder.js~ActivityBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ActivityBuilder#withType",
    "access": "public",
    "description": "Set the Activity `type`\n\nIf the `type` is not a URI but matches a name of an Activity Type in a\nProfile loaded by {@link StatementBuilder#withProfile}, the uri of that\nActivity Type will be used.",
    "lineNumber": 732,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "URI to set the `type` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ActivityBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if `type` does not match a name and is not uri-like."
      }
    ]
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "withExtension",
    "memberof": "src/builder.js~ActivityBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ActivityBuilder#withExtension",
    "access": "public",
    "description": "Add an extension to the Activity definition\n\nIf the `key` is not a URI but matches a name of an Activity Extension in a\nProfile loaded by {@link StatementBuilder#withProfile}, the uri of that\nActivity Extension will be used.",
    "lineNumber": 749,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "URI key of the extension"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "any JSON-legal data structure"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ActivityBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if `key` does not match a name and is not uri-like."
      }
    ]
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "withKey",
    "memberof": "src/builder.js~ActivityBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ActivityBuilder#withKey",
    "access": "public",
    "description": "",
    "lineNumber": 757,
    "ignore": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "withMoreInfo",
    "memberof": "src/builder.js~ActivityBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ActivityBuilder#withMoreInfo",
    "access": "public",
    "description": "Add a `moreInfo` URL",
    "lineNumber": 768,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "URL to use for `moreInfo`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ActivityBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "withInteractionType",
    "memberof": "src/builder.js~ActivityBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ActivityBuilder#withInteractionType",
    "access": "public",
    "description": "Add an `interactionType`",
    "lineNumber": 779,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "`interactionType` to use."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ActivityBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "withCorrectResponsesPattern",
    "memberof": "src/builder.js~ActivityBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ActivityBuilder#withCorrectResponsesPattern",
    "access": "public",
    "description": "Add possible `correctResponsesPattern` values",
    "lineNumber": 791,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "responses",
        "description": "strings indicating possible\n`correctResponsesPattern` values"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ActivityBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "withChoices",
    "memberof": "src/builder.js~ActivityBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ActivityBuilder#withChoices",
    "access": "public",
    "description": "Add available `choices` for this interaction",
    "lineNumber": 803,
    "params": [
      {
        "nullable": null,
        "types": [
          "InteractionComponent[]"
        ],
        "spread": false,
        "optional": false,
        "name": "choices",
        "description": "interaction components with string `id`\nand language map `description`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ActivityBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "withScale",
    "memberof": "src/builder.js~ActivityBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ActivityBuilder#withScale",
    "access": "public",
    "description": "Add `scale` values for this interaction",
    "lineNumber": 815,
    "params": [
      {
        "nullable": null,
        "types": [
          "InteractionComponent[]"
        ],
        "spread": false,
        "optional": false,
        "name": "scale",
        "description": "interaction components with string `id`\nand language map `description`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ActivityBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "withSource",
    "memberof": "src/builder.js~ActivityBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ActivityBuilder#withSource",
    "access": "public",
    "description": "Add available `source` values for this interaction",
    "lineNumber": 827,
    "params": [
      {
        "nullable": null,
        "types": [
          "InteractionComponent[]"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": "interaction components with string `id`\nand language map `description`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ActivityBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "withTarget",
    "memberof": "src/builder.js~ActivityBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ActivityBuilder#withTarget",
    "access": "public",
    "description": "Add available `target` values for this interaction",
    "lineNumber": 839,
    "params": [
      {
        "nullable": null,
        "types": [
          "InteractionComponent[]"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "interaction components with string `id`\nand language map `description`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ActivityBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "withSteps",
    "memberof": "src/builder.js~ActivityBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ActivityBuilder#withSteps",
    "access": "public",
    "description": "Add available `steps` for this interaction",
    "lineNumber": 851,
    "params": [
      {
        "nullable": null,
        "types": [
          "InteractionComponent[]"
        ],
        "spread": false,
        "optional": false,
        "name": "steps",
        "description": "interaction components with string `id`\nand language map `description`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ActivityBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "withLanguageMap",
    "memberof": "src/builder.js~ActivityBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ActivityBuilder#withLanguageMap",
    "access": "public",
    "description": "",
    "lineNumber": 858,
    "ignore": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "language",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "withName",
    "memberof": "src/builder.js~ActivityBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ActivityBuilder#withName",
    "access": "public",
    "description": "Add a `name` for this Activity in a particular `language`",
    "lineNumber": 872,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of this Activity in that language."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "language",
        "description": "an RFC 5646 language tag, such as `en` or\n`zh-Hans`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ActivityBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "withDefinition",
    "memberof": "src/builder.js~ActivityBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~ActivityBuilder#withDefinition",
    "access": "public",
    "description": "Add a `definition` for this activity in a particular `language`",
    "lineNumber": 886,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": "the definition of this Activity in that\nlanguage."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "language",
        "description": "an RFC 5646 language tag, such as `en` or\n`zh-Hans`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ActivityBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 107,
    "kind": "class",
    "name": "AttachmentBuilder",
    "memberof": "src/builder.js",
    "static": true,
    "longname": "src/builder.js~AttachmentBuilder",
    "access": "public",
    "export": true,
    "importPath": "xapi-statement-builder/src/builder.js",
    "importStyle": "{AttachmentBuilder}",
    "description": "Use AttachmentBuilder to make Attachments for use in your Statements.\n\nWhen working with Statements you should generally get an AttachmentBuilder\ninstance by the {@link StatementBuilder#attachments} property.\n\nNote: currently this library does not handle Attachment bodies, though they\ncan still be added later, during Statement sending.",
    "lineNumber": 901,
    "interface": false,
    "extends": [
      "BuilderRecord"
    ]
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "withUsageType",
    "memberof": "src/builder.js~AttachmentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AttachmentBuilder#withUsageType",
    "access": "public",
    "description": "Provide a `usageType` uri\n\nIf the `uri` is not a URI but matches a name of an Attachment Usage Type\nin a Profile loaded by {@link StatementBuilder#withProfile}, the uri of\nthat Attachment Usage Type will be used.",
    "lineNumber": 914,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uri",
        "description": "the attachment usage type"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AttachmentBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if `uri` does not match a name and is not uri-like."
      }
    ]
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "withKey",
    "memberof": "src/builder.js~AttachmentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AttachmentBuilder#withKey",
    "access": "public",
    "description": "",
    "lineNumber": 922,
    "ignore": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "withContentType",
    "memberof": "src/builder.js~AttachmentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AttachmentBuilder#withContentType",
    "access": "public",
    "description": "Provide a `contentType` for the attachment, also called a media type or\nMIME type",
    "lineNumber": 934,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "contentType",
        "description": "the attachment content type"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AttachmentBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "withLength",
    "memberof": "src/builder.js~AttachmentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AttachmentBuilder#withLength",
    "access": "public",
    "description": "Provide a `length` for the attachment in octets",
    "lineNumber": 945,
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "length",
        "description": "the attachment length in octets"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AttachmentBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "withSha2",
    "memberof": "src/builder.js~AttachmentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AttachmentBuilder#withSha2",
    "access": "public",
    "description": "Provide a `sha2` for the attachment\n\nThis is the hexadecimal value of a hash from the SHA-2 family of hashes,\nwith a bit-length of 224, 256, 384, or 512.",
    "lineNumber": 958,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sha2",
        "description": "the attachment SHA-2 hash in hex"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AttachmentBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "withFileUrl",
    "memberof": "src/builder.js~AttachmentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AttachmentBuilder#withFileUrl",
    "access": "public",
    "description": "Provide a `fileUrl` where this attachment can be accessed\n\nThe fileUrl does not need to public, but should be as accessible as\npossible.",
    "lineNumber": 971,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "fileUrl",
        "description": "a URL to retrieve the attachment from."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AttachmentBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "withLanguageMap",
    "memberof": "src/builder.js~AttachmentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AttachmentBuilder#withLanguageMap",
    "access": "public",
    "description": "",
    "lineNumber": 978,
    "ignore": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "language",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "withDisplay",
    "memberof": "src/builder.js~AttachmentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AttachmentBuilder#withDisplay",
    "access": "public",
    "description": "Add a `display` for this attachment in a particular `language`",
    "lineNumber": 993,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "display",
        "description": "a short display value for this Attachment in that\nlanguage."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "language",
        "description": "an RFC 5646 language tag, such as `en` or\n`zh-Hans`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AttachmentBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "withDescription",
    "memberof": "src/builder.js~AttachmentBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~AttachmentBuilder#withDescription",
    "access": "public",
    "description": "Add a `description` for this attachment in a particular `language`",
    "lineNumber": 1007,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "a description for this Attachment in that\nlanguage."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "language",
        "description": "an RFC 5646 language tag, such as `en` or\n`zh-Hans`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AttachmentBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 117,
    "kind": "class",
    "name": "StatementBuilder",
    "memberof": "src/builder.js",
    "static": true,
    "longname": "src/builder.js~StatementBuilder",
    "access": "public",
    "export": true,
    "importPath": "xapi-statement-builder/src/builder.js",
    "importStyle": "{StatementBuilder}",
    "description": "Use StatementBuilder to make Statements. If you're not planning to send\nStatements according to a Profile Pattern, this is your starting point.",
    "examples": [
      "var statement = StatementBuilder.builder();\n\nstatement = statement.withActorEmail(\n    \"zhangwei@example.gov\"\n).withVerb(\n    \"http://made.up.verb.example.com/desalinated\"\n).withObjectId(\n    \"http://made.up.activity.example.com/PacificOcean\"\n);\n\nconsole.log(statement.build());"
    ],
    "lineNumber": 1030,
    "interface": false,
    "extends": [
      "BuilderRecord"
    ]
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "withOracle",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withOracle",
    "access": "public",
    "description": "",
    "lineNumber": 1034,
    "ignore": true,
    "params": [
      {
        "name": "oracle",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "withProfile",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withProfile",
    "access": "public",
    "description": "Add an xAPI Profile to enable referring to terms by name instead of URI\nwith later API calls.",
    "lineNumber": 1046,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "profile",
        "description": "a complete xAPI Profile as a JSON object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "withVerb",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withVerb",
    "access": "public",
    "description": "Add the `verb` for the Statement\n\nIf the `verb` is not a verb object or a URI but matches a name of a Verb\nin a Profile loaded by {@link StatementBuilder#withProfile}, the complete\nProfile representation of that verb will be used. If a URI is provided\nwill also attempt to load the complete Profile representation.",
    "lineNumber": 1063,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri",
          "string",
          "Verb"
        ],
        "spread": false,
        "optional": false,
        "name": "verb",
        "description": "the verb URI, name or object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if `verb` does not match a name and is not uri-like or an\nobject with an `id`."
      }
    ]
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "withVerbDisplay",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withVerbDisplay",
    "access": "public",
    "description": "Add the `verb` `display` for a particular `language`",
    "lineNumber": 1078,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "language",
        "description": "an RFC 5646 language tag, such as `en` or\n`zh-Hans`."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "display",
        "description": "a short display value for the verb in that\nlanguage."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "withObject",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObject",
    "access": "public",
    "description": "Add the `object` for the Statement\n\nThere are several possible ways to provide the `object`:\n  * As the UUID `id` of a Statement. The `object` will be set to a\nStatementRef with that `id`.\n  * As a name or URI of an Activity. If the Activity is found in a\nProfile loaded by {@link StatementBuilder#withProfile}, the complete\nProfile representation of that Activity will be used.\n  * As a builder from this library for an Agent, Group, or Activity.\n  * As a {@link StatementBuilder}, which will be used as a SubStatement\naccording to the rules from the xAPI specification.\n  * as a complete simple javascript object of an Activity, Agent, Group,\nStatementRef, or SubStatement.",
    "lineNumber": 1105,
    "params": [
      {
        "nullable": null,
        "types": [
          "uuid",
          "uri",
          "string",
          "StatementBuilder",
          "AgentBuilder",
          "ActivityBuilder",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "the `object` to use"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if a string argument is not a UUID, does not match a name,\nand is not uri-like."
      }
    ]
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "withAttachment",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withAttachment",
    "access": "public",
    "description": "Add an attachment to the Statement",
    "lineNumber": 1133,
    "params": [
      {
        "nullable": null,
        "types": [
          "Attachment"
        ],
        "spread": false,
        "optional": false,
        "name": "attachment",
        "description": "an AttachmentBuilder or simple javascript\nobject of an attachment."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "withContextStatement",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withContextStatement",
    "access": "public",
    "description": "Add a `context` `statement` as a StatementRef\n\nAccepts a StatementBuilder object, a simple javascript Statement or\nStatementRef object, or the uuid `id` of the Statement referred to.",
    "lineNumber": 1148,
    "params": [
      {
        "nullable": null,
        "types": [
          "uuid",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "statement",
        "description": "the Statement to refer to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "withPath",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withPath",
    "access": "public",
    "description": "",
    "lineNumber": 1165,
    "ignore": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "withId",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withId",
    "access": "public",
    "description": "Add the `id` for the Statement",
    "lineNumber": 1176,
    "params": [
      {
        "nullable": null,
        "types": [
          "uuid"
        ],
        "spread": false,
        "optional": false,
        "name": "uuid",
        "description": "the `id`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "withTimestamp",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withTimestamp",
    "access": "public",
    "description": "Add the ISO 8601 `timestamp` the Statement occurred",
    "lineNumber": 1187,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "timestamp",
        "description": "the `timestamp`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "withCurrentTimestamp",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withCurrentTimestamp",
    "access": "public",
    "description": "Set the Statement as occurring at the current time.\n\nNote: when .build() is called to turn this into a Statement,\nif no `timestamp` is set the current time will be used.\nThis method is for if the time the statement occurs is\nbefore some information is known for the Statement.",
    "lineNumber": 1204,
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    },
    "params": []
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "withStored",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withStored",
    "access": "public",
    "description": "Add the ISO 8601 `stored` time for the Statement",
    "lineNumber": 1215,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "timestamp",
        "description": "the `stored` time."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "withVersion",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withVersion",
    "access": "public",
    "description": "Add the xAPI `version` of the Statement",
    "lineNumber": 1226,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": "the `version`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "withScaledScore",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withScaledScore",
    "access": "public",
    "description": "Add a score scaled to between -1 and 1 (inclusive) for the Statement\n`result`",
    "lineNumber": 1239,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "score",
        "description": "the score."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "withRawScore",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withRawScore",
    "access": "public",
    "description": "Add a raw score for the Statement `result`",
    "lineNumber": 1250,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "score",
        "description": "the score."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "withMinScore",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withMinScore",
    "access": "public",
    "description": "Add a minimum score bound (inclusive) for the raw score.",
    "lineNumber": 1261,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "score",
        "description": "the score."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "withMaxScore",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withMaxScore",
    "access": "public",
    "description": "Add a maximum score bound (inclusive) for the raw score.",
    "lineNumber": 1272,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "score",
        "description": "the score."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "withSuccess",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withSuccess",
    "access": "public",
    "description": "Add a boolean `success` for the Statement `result`",
    "lineNumber": 1283,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "success",
        "description": "successful?"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "asSucceeded",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#asSucceeded",
    "access": "public",
    "description": "Mark the Statement `result` as succeeding",
    "lineNumber": 1293,
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    },
    "params": []
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "asFailed",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#asFailed",
    "access": "public",
    "description": "Mark the Statement `result` as failing",
    "lineNumber": 1303,
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    },
    "params": []
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "withCompletion",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withCompletion",
    "access": "public",
    "description": "Add a boolean `completion` for the Statement `result`",
    "lineNumber": 1314,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "completion",
        "description": "complete?"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "asComplete",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#asComplete",
    "access": "public",
    "description": "Mark the Statement `result` as complete",
    "lineNumber": 1324,
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    },
    "params": []
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "asIncomplete",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#asIncomplete",
    "access": "public",
    "description": "Mark the Statement `result` as incomplete",
    "lineNumber": 1334,
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    },
    "params": []
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "withResponse",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withResponse",
    "access": "public",
    "description": "Add a `response` for the Statement `result`",
    "lineNumber": 1345,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "response",
        "description": "the `response`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "withDuration",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withDuration",
    "access": "public",
    "description": "Add an ISO 8601 `duration` for the Statement `result`\n\nIf `duration` is a number, this will automatically convert it to a\nduration representation in seconds.",
    "lineNumber": 1358,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "the `duration`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "withRegistration",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withRegistration",
    "access": "public",
    "description": "Add a `registration` for the Statement `context`",
    "lineNumber": 1373,
    "params": [
      {
        "nullable": null,
        "types": [
          "uuid"
        ],
        "spread": false,
        "optional": false,
        "name": "uuid",
        "description": "the `registration`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "withRevision",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withRevision",
    "access": "public",
    "description": "Add a `revision` for the Statement `context`",
    "lineNumber": 1384,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "revision",
        "description": "the `revision`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "withPlatform",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withPlatform",
    "access": "public",
    "description": "Add a `platform` for the Statement `context`",
    "lineNumber": 1395,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "platform",
        "description": "the `platform`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "withLanguage",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withLanguage",
    "access": "public",
    "description": "Add a `language` for the Statement `context`",
    "lineNumber": 1406,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "language",
        "description": "the `language`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "withAgent",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withAgent",
    "access": "public",
    "description": "",
    "lineNumber": 1413,
    "ignore": true,
    "params": [
      {
        "name": "location",
        "types": [
          "*"
        ]
      },
      {
        "name": "agent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "withActor",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withActor",
    "access": "public",
    "description": "Add the `actor` for the Statement\n\nThere are two ways to provide the agent:\n  * As a AgentBuilder from this library.\n  * as a complete simple javascript object of an Agent or Group.",
    "lineNumber": 1429,
    "params": [
      {
        "nullable": null,
        "types": [
          "AgentBuilder",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "agent",
        "description": "the agent"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "withAuthority",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withAuthority",
    "access": "public",
    "description": "Add the `authority` for the Statement\n\nThere are two ways to provide the agent:\n  * As a AgentBuilder from this library.\n  * as a complete simple javascript object of an Agent or Group.",
    "lineNumber": 1443,
    "params": [
      {
        "nullable": null,
        "types": [
          "AgentBuilder",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "agent",
        "description": "the agent"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "withInstructor",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withInstructor",
    "access": "public",
    "description": "Add the `instructor` to the `context` for the Statement\n\nThere are two ways to provide the agent:\n  * As a AgentBuilder from this library.\n  * as a complete simple javascript object of an Agent or Group.",
    "lineNumber": 1457,
    "params": [
      {
        "nullable": null,
        "types": [
          "AgentBuilder",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "agent",
        "description": "the agent"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "withTeam",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withTeam",
    "access": "public",
    "description": "Add the `team` to the `context` for the Statement\n\nThere are two ways to provide the agent:\n  * As a AgentBuilder from this library.\n  * as a complete simple javascript object of an Agent or Group.",
    "lineNumber": 1471,
    "params": [
      {
        "nullable": null,
        "types": [
          "AgentBuilder",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "agent",
        "description": "the agent"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    }
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "withAgentMethod",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withAgentMethod",
    "access": "public",
    "description": "",
    "lineNumber": 1478,
    "ignore": true,
    "params": [
      {
        "name": "location",
        "types": [
          "*"
        ]
      },
      {
        "name": "method",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "withActorEmail",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withActorEmail",
    "access": "public",
    "description": "Add an `mbox` to the `actor` based on an email",
    "lineNumber": 1491,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "Email to use for the Agent/Group `mbox` property"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "withActorName",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withActorName",
    "access": "public",
    "description": "Add a personal or descriptive name for the `actor`",
    "lineNumber": 1502,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name to use for the Agent/Group `name` property."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "withActorHomePage",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withActorHomePage",
    "access": "public",
    "description": "Add the `homePage` URL of an `account` to the `actor`",
    "lineNumber": 1514,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "homePage",
        "description": "URL to use for the Agent/Group `account`\n`homePage` property"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "withActorAccountName",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withActorAccountName",
    "access": "public",
    "description": "Add the `name` identifier of an `account` to the `actor`. This is a unique identifier\nthe system identified by `homePage` links to a particular account.",
    "lineNumber": 1527,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name to use for the Agent/Group `account` `name`\nproperty."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "actorAsGroup",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#actorAsGroup",
    "access": "public",
    "description": "Makes the `actor` a Group.",
    "lineNumber": 1537,
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    },
    "params": []
  },
  {
    "__docId__": 158,
    "kind": "method",
    "name": "withActorMember",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withActorMember",
    "access": "public",
    "description": "Adds an Agent as a `member` of the `actor`.",
    "lineNumber": 1549,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "agent",
        "description": "An AgentBuilder or a plain Javascript object\nrepresenting a complete Agent, to add to the `member` property."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "withActorMbox",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withActorMbox",
    "access": "public",
    "description": "Identify this `actor` with an `mbox` (must start with `mailto:`!)",
    "lineNumber": 1560,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "mbox",
        "description": "What to set the `mbox` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "withActorMbox_sha1sum",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withActorMbox_sha1sum",
    "access": "public",
    "description": "Identify this `actor` with an `mbox_sha1sum`",
    "lineNumber": 1570,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sha1",
        "description": "What to set the `mbox_sha1sum` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "withActorOpenid",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withActorOpenid",
    "access": "public",
    "description": "Identify this `actor` with an `openid`",
    "lineNumber": 1580,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "openid",
        "description": "URI to set the `openid` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "withActorAccount",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withActorAccount",
    "access": "public",
    "description": "Identify this `actor` with an `account`",
    "lineNumber": 1591,
    "params": [
      {
        "nullable": null,
        "types": [
          "{homePage: uri, name: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "account",
        "description": "object to set `account`\nto."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "withAuthorityEmail",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withAuthorityEmail",
    "access": "public",
    "description": "Add an `mbox` to the `authority` based on an email",
    "lineNumber": 1602,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "Email to use for the Agent/Group `mbox` property"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "withAuthorityName",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withAuthorityName",
    "access": "public",
    "description": "Add a personal or descriptive name for the `authority`",
    "lineNumber": 1613,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name to use for the Agent/Group `name` property."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "withAuthorityHomePage",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withAuthorityHomePage",
    "access": "public",
    "description": "Add the `homePage` URL of an `account` to the `authority`",
    "lineNumber": 1625,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "homePage",
        "description": "URL to use for the Agent/Group `account`\n`homePage` property"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "withAuthorityAccountName",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withAuthorityAccountName",
    "access": "public",
    "description": "Add the `name` identifier of an `account` to the `authority`. This is a unique identifier\nthe system identified by `homePage` links to a particular account.",
    "lineNumber": 1638,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name to use for the Agent/Group `account` `name`\nproperty."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "authorityAsGroup",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#authorityAsGroup",
    "access": "public",
    "description": "Makes the `authority` a Group.",
    "lineNumber": 1648,
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    },
    "params": []
  },
  {
    "__docId__": 168,
    "kind": "method",
    "name": "withAuthorityMember",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withAuthorityMember",
    "access": "public",
    "description": "Adds an Agent as a `member` of the `authority`.",
    "lineNumber": 1660,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "agent",
        "description": "An AgentBuilder or a plain Javascript object\nrepresenting a complete Agent, to add to the `member` property."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 169,
    "kind": "method",
    "name": "withAuthorityMbox",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withAuthorityMbox",
    "access": "public",
    "description": "Identify this `authority` with an `mbox` (must start with `mailto:`!)",
    "lineNumber": 1671,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "mbox",
        "description": "What to set the `mbox` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "withAuthorityMbox_sha1sum",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withAuthorityMbox_sha1sum",
    "access": "public",
    "description": "Identify this `authority` with an `mbox_sha1sum`",
    "lineNumber": 1681,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sha1",
        "description": "What to set the `mbox_sha1sum` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "withAuthorityOpenid",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withAuthorityOpenid",
    "access": "public",
    "description": "Identify this `authority` with an `openid`",
    "lineNumber": 1691,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "openid",
        "description": "URI to set the `openid` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "withAuthorityAccount",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withAuthorityAccount",
    "access": "public",
    "description": "Identify this `authority` with an `account`",
    "lineNumber": 1702,
    "params": [
      {
        "nullable": null,
        "types": [
          "{homePage: uri, name: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "account",
        "description": "object to set `account`\nto."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "withTeamEmail",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withTeamEmail",
    "access": "public",
    "description": "Add an `mbox` to the `team` based on an email",
    "lineNumber": 1713,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "Email to use for the Agent/Group `mbox` property"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "withTeamName",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withTeamName",
    "access": "public",
    "description": "Add a personal or descriptive name for the `team`",
    "lineNumber": 1724,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name to use for the Agent/Group `name` property."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "withTeamHomePage",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withTeamHomePage",
    "access": "public",
    "description": "Add the `homePage` URL of an `account` to the `team`",
    "lineNumber": 1736,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "homePage",
        "description": "URL to use for the Agent/Group `account`\n`homePage` property"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "withTeamAccountName",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withTeamAccountName",
    "access": "public",
    "description": "Add the `name` identifier of an `account` to the `team`. This is a unique identifier\nthe system identified by `homePage` links to a particular account.",
    "lineNumber": 1749,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name to use for the Agent/Group `account` `name`\nproperty."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "teamAsGroup",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#teamAsGroup",
    "access": "public",
    "description": "Makes the `team` a Group.",
    "lineNumber": 1759,
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    },
    "params": []
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "withTeamMember",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withTeamMember",
    "access": "public",
    "description": "Adds an Agent as a `member` of the `team`.",
    "lineNumber": 1771,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "agent",
        "description": "An AgentBuilder or a plain Javascript object\nrepresenting a complete Agent, to add to the `member` property."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "withTeamMbox",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withTeamMbox",
    "access": "public",
    "description": "Identify this `team` with an `mbox` (must start with `mailto:`!)",
    "lineNumber": 1782,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "mbox",
        "description": "What to set the `mbox` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "withTeamMbox_sha1sum",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withTeamMbox_sha1sum",
    "access": "public",
    "description": "Identify this `team` with an `mbox_sha1sum`",
    "lineNumber": 1792,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sha1",
        "description": "What to set the `mbox_sha1sum` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "withTeamOpenid",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withTeamOpenid",
    "access": "public",
    "description": "Identify this `team` with an `openid`",
    "lineNumber": 1802,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "openid",
        "description": "URI to set the `openid` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "withTeamAccount",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withTeamAccount",
    "access": "public",
    "description": "Identify this `team` with an `account`",
    "lineNumber": 1813,
    "params": [
      {
        "nullable": null,
        "types": [
          "{homePage: uri, name: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "account",
        "description": "object to set `account`\nto."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "withInstructorEmail",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withInstructorEmail",
    "access": "public",
    "description": "Add an `mbox` to the `instructor` based on an email",
    "lineNumber": 1824,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "Email to use for the Agent/Group `mbox` property"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 184,
    "kind": "method",
    "name": "withInstructorName",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withInstructorName",
    "access": "public",
    "description": "Add a personal or descriptive name for the `instructor`",
    "lineNumber": 1835,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name to use for the Agent/Group `name` property."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "withInstructorHomePage",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withInstructorHomePage",
    "access": "public",
    "description": "Add the `homePage` URL of an `account` to the `instructor`",
    "lineNumber": 1847,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "homePage",
        "description": "URL to use for the Agent/Group `account`\n`homePage` property"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "withInstructorAccountName",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withInstructorAccountName",
    "access": "public",
    "description": "Add the `name` identifier of an `account` to the `instructor`. This is a unique identifier\nthe system identified by `homePage` links to a particular account.",
    "lineNumber": 1860,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name to use for the Agent/Group `account` `name`\nproperty."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "instructorAsGroup",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#instructorAsGroup",
    "access": "public",
    "description": "Makes the `instructor` a Group.",
    "lineNumber": 1870,
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    },
    "params": []
  },
  {
    "__docId__": 188,
    "kind": "method",
    "name": "withInstructorMember",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withInstructorMember",
    "access": "public",
    "description": "Adds an Agent as a `member` of the `instructor`.",
    "lineNumber": 1882,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "agent",
        "description": "An AgentBuilder or a plain Javascript object\nrepresenting a complete Agent, to add to the `member` property."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "withInstructorMbox",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withInstructorMbox",
    "access": "public",
    "description": "Identify this `instructor` with an `mbox` (must start with `mailto:`!)",
    "lineNumber": 1893,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "mbox",
        "description": "What to set the `mbox` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "withInstructorMbox_sha1sum",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withInstructorMbox_sha1sum",
    "access": "public",
    "description": "Identify this `instructor` with an `mbox_sha1sum`",
    "lineNumber": 1903,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sha1",
        "description": "What to set the `mbox_sha1sum` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "withInstructorOpenid",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withInstructorOpenid",
    "access": "public",
    "description": "Identify this `instructor` with an `openid`",
    "lineNumber": 1913,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "openid",
        "description": "URI to set the `openid` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "withInstructorAccount",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withInstructorAccount",
    "access": "public",
    "description": "Identify this `instructor` with an `account`",
    "lineNumber": 1924,
    "params": [
      {
        "nullable": null,
        "types": [
          "{homePage: uri, name: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "account",
        "description": "object to set `account`\nto."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 193,
    "kind": "method",
    "name": "withObjectEmail",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectEmail",
    "access": "public",
    "description": "Add an `mbox` to the `object` based on an email",
    "lineNumber": 1935,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "Email to use for the Agent/Group `mbox` property"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "withObjectHomePage",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectHomePage",
    "access": "public",
    "description": "Add the `homePage` URL of an `account` to the `object`",
    "lineNumber": 1947,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "homePage",
        "description": "URL to use for the Agent/Group `account`\n`homePage` property"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "withObjectAccountName",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectAccountName",
    "access": "public",
    "description": "Add the `name` identifier of an `account` to the `object`. This is a unique identifier\nthe system identified by `homePage` links to a particular account.",
    "lineNumber": 1960,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name to use for the Agent/Group `account` `name`\nproperty."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "objectAsGroup",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#objectAsGroup",
    "access": "public",
    "description": "Makes the `object` a Group.",
    "lineNumber": 1970,
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    },
    "params": []
  },
  {
    "__docId__": 197,
    "kind": "method",
    "name": "withObjectMember",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectMember",
    "access": "public",
    "description": "Adds an Agent as a `member` of the `object`.",
    "lineNumber": 1982,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "agent",
        "description": "An AgentBuilder or a plain Javascript object\nrepresenting a complete Agent, to add to the `member` property."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 198,
    "kind": "method",
    "name": "withObjectMbox",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectMbox",
    "access": "public",
    "description": "Identify this `object` with an `mbox` (must start with `mailto:`!)",
    "lineNumber": 1993,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "mbox",
        "description": "What to set the `mbox` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "withObjectMbox_sha1sum",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectMbox_sha1sum",
    "access": "public",
    "description": "Identify this `object` with an `mbox_sha1sum`",
    "lineNumber": 2003,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sha1",
        "description": "What to set the `mbox_sha1sum` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "withObjectOpenid",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectOpenid",
    "access": "public",
    "description": "Identify this `object` with an `openid`",
    "lineNumber": 2013,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "openid",
        "description": "URI to set the `openid` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "withObjectAccount",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectAccount",
    "access": "public",
    "description": "Identify this `object` with an `account`",
    "lineNumber": 2024,
    "params": [
      {
        "nullable": null,
        "types": [
          "{homePage: uri, name: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "account",
        "description": "object to set `account`\nto."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "withActivityMethod",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withActivityMethod",
    "access": "public",
    "description": "",
    "lineNumber": 2032,
    "ignore": true,
    "params": [
      {
        "name": "method",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "method",
    "name": "withObjectId",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectId",
    "access": "public",
    "description": "Set an Activity `object` `id`\n\nIf the `id` is not a URI but matches a name of an Activity in a Profile\nloaded by {@link StatementBuilder#withProfile}, the `id` of that Activity will\nbe used.",
    "lineNumber": 2050,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "URI to set the `id` to or name of an Activity from\na Profile."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if `id` does not match a name and is not uri-like."
      }
    ]
  },
  {
    "__docId__": 204,
    "kind": "method",
    "name": "withObjectAsProfile",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectAsProfile",
    "access": "public",
    "description": "Makes the Activity object look exactly as in the Profile it is from.\n\nIf no `id` is provided but one is set for the Activity, that will be used.\nIf the `id` is not a URI but matches a name of an Activity in a Profile\nloaded by {@link StatementBuilder#withProfile}, that Activity will\nbe used.",
    "lineNumber": 2067,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri",
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "id",
        "description": "URI or string to lookup the Activity with"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if `id` does not match a name and is not uri-like,\nor if no `id` is provided or present."
      }
    ]
  },
  {
    "__docId__": 205,
    "kind": "method",
    "name": "withObjectType",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectType",
    "access": "public",
    "description": "Set the Activity `object` `type`\n\nIf the `type` is not a URI but matches a name of an Activity Type in a\nProfile loaded by {@link StatementBuilder#withProfile}, the uri of that\nActivity Type will be used.",
    "lineNumber": 2082,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "URI to set the `type` to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if `type` does not match a name and is not uri-like."
      }
    ]
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "withObjectExtension",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectExtension",
    "access": "public",
    "description": "Add an extension to the Activity `object` `definition`\n\nIf the `key` is not a URI but matches a name of an Activity Extension in a\nProfile loaded by {@link StatementBuilder#withProfile}, the uri of that\nActivity Extension will be used.",
    "lineNumber": 2098,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "URI key of the extension"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "any JSON-legal data structure"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if `key` does not match a name and is not uri-like."
      }
    ]
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "withObjectMoreInfo",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectMoreInfo",
    "access": "public",
    "description": "Add a `moreInfo` URL to an Activity `object`",
    "lineNumber": 2110,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "URL to use for `moreInfo`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "withObjectInteractionType",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectInteractionType",
    "access": "public",
    "description": "Add an `interactionType` to an Activity `object`",
    "lineNumber": 2121,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "`interactionType` to use."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "withObjectCorrectResponsesPattern",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectCorrectResponsesPattern",
    "access": "public",
    "description": "Add possible `correctResponsesPattern` values to an Activity `object`",
    "lineNumber": 2133,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "responses",
        "description": "strings indicating possible\n`correctResponsesPattern` values"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "withObjectChoices",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectChoices",
    "access": "public",
    "description": "Add available `choices` for this interaction to an Activity `object`",
    "lineNumber": 2145,
    "params": [
      {
        "nullable": null,
        "types": [
          "InteractionComponent[]"
        ],
        "spread": false,
        "optional": false,
        "name": "choices",
        "description": "interaction components with string `id`\nand language map `description`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "withObjectScale",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectScale",
    "access": "public",
    "description": "Add `scale` values for this interaction to an Activity `object`",
    "lineNumber": 2157,
    "params": [
      {
        "nullable": null,
        "types": [
          "InteractionComponent[]"
        ],
        "spread": false,
        "optional": false,
        "name": "scale",
        "description": "interaction components with string `id`\nand language map `description`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "withObjectSource",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectSource",
    "access": "public",
    "description": "Add available `source` values for this interaction to an Activity `object`",
    "lineNumber": 2169,
    "params": [
      {
        "nullable": null,
        "types": [
          "InteractionComponent[]"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": "interaction components with string `id`\nand language map `description`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "withObjectTarget",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectTarget",
    "access": "public",
    "description": "Add available `target` values for this interaction to an Activity `object`",
    "lineNumber": 2181,
    "params": [
      {
        "nullable": null,
        "types": [
          "InteractionComponent[]"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "interaction components with string `id`\nand language map `description`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "withObjectSteps",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectSteps",
    "access": "public",
    "description": "Add available `steps` for this interaction to an Activity `object`",
    "lineNumber": 2193,
    "params": [
      {
        "nullable": null,
        "types": [
          "InteractionComponent[]"
        ],
        "spread": false,
        "optional": false,
        "name": "steps",
        "description": "interaction components with string `id`\nand language map `description`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "withObjectDefinition",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectDefinition",
    "access": "public",
    "description": "Add a `definition` for this Activity `object` in a particular `language`",
    "lineNumber": 2208,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "definition",
        "description": "the definition of this Activity in that\nlanguage."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "language",
        "description": "an RFC 5646 language tag, such as `en` or\n`zh-Hans`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "withObjectName",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withObjectName",
    "access": "public",
    "description": "Add a name for the `object` -- a personal or descriptive name\nfor an Agent or Group, or the name of an Activity in a `language`",
    "lineNumber": 2228,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The language-specific name for an Activity or the\nAgent/Group name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "language",
        "description": "an RFC 5646 language tag, such as `en` or\n`zh-Hans`. Must use for Activity objects, must not use for Agents."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    }
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "withContextActivity",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withContextActivity",
    "access": "public",
    "description": "",
    "lineNumber": 2240,
    "ignore": true,
    "params": [
      {
        "name": "variety",
        "types": [
          "*"
        ]
      },
      {
        "name": "activity",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "withContextCategory",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withContextCategory",
    "access": "public",
    "description": "Add an Activity to the `category` `contextActivities` in `context`\n\nThere are several possible ways to provide the Activity:\n  * As a name or URI of an Activity. If the Activity is found in a\nProfile loaded by {@link StatementBuilder#withProfile}, the complete\nProfile representation of that Activity will be used.\n  * As a builder from this library for an Activity.\n  * as a complete simple javascript object of an Activity.",
    "lineNumber": 2270,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri",
          "string",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "activity",
        "description": "the Activity to use"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if a string activity does not match a name and is not\nuri-like."
      }
    ]
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "withContextParent",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withContextParent",
    "access": "public",
    "description": "Add an Activity to the `parent` `contextActivities` in `context`\n\nThere are several possible ways to provide the Activity:\n  * As a name or URI of an Activity. If the Activity is found in a\nProfile loaded by {@link StatementBuilder#withProfile}, the complete\nProfile representation of that Activity will be used.\n  * As a builder from this library for an Activity.\n  * as a complete simple javascript object of an Activity.",
    "lineNumber": 2289,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri",
          "string",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "activity",
        "description": "the Activity to use"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if a string activity does not match a name and is not\nuri-like."
      }
    ]
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "withContextGrouping",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withContextGrouping",
    "access": "public",
    "description": "Add an Activity to the `grouping` `contextActivities` in `context`\n\nThere are several possible ways to provide the Activity:\n  * As a name or URI of an Activity. If the Activity is found in a\nProfile loaded by {@link StatementBuilder#withProfile}, the complete\nProfile representation of that Activity will be used.\n  * As a builder from this library for an Activity.\n  * as a complete simple javascript object of an Activity.",
    "lineNumber": 2308,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri",
          "string",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "activity",
        "description": "the Activity to use"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if a string activity does not match a name and is not\nuri-like."
      }
    ]
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "withContextOther",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withContextOther",
    "access": "public",
    "description": "Add an Activity to the `other` `contextActivities` in `context`\n\nThere are several possible ways to provide the Activity:\n  * As a name or URI of an Activity. If the Activity is found in a\nProfile loaded by {@link StatementBuilder#withProfile}, the complete\nProfile representation of that Activity will be used.\n  * As a builder from this library for an Activity.\n  * as a complete simple javascript object of an Activity.",
    "lineNumber": 2327,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri",
          "string",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "activity",
        "description": "the Activity to use"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if a string activity does not match a name and is not\nuri-like."
      }
    ]
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "withExtension",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withExtension",
    "access": "public",
    "description": "",
    "lineNumber": 2335,
    "ignore": true,
    "params": [
      {
        "name": "location",
        "types": [
          "*"
        ]
      },
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "withContextExtension",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withContextExtension",
    "access": "public",
    "description": "Add an extension to the `context`\n\nIf the `key` is not a URI but matches a name of a Context Extension in a\nProfile loaded by {@link StatementBuilder#withProfile}, the uri of that\nContext Extension will be used.",
    "lineNumber": 2352,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "URI key of the extension"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "any JSON-legal data structure"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if `key` does not match a name and is not uri-like."
      }
    ]
  },
  {
    "__docId__": 224,
    "kind": "method",
    "name": "withResultExtension",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#withResultExtension",
    "access": "public",
    "description": "Add an extension to the `result`\n\nIf the `key` is not a URI but matches a name of a Result Extension in a\nProfile loaded by {@link StatementBuilder#withProfile}, the uri of that\nResult Extension will be used.",
    "lineNumber": 2369,
    "params": [
      {
        "nullable": null,
        "types": [
          "uri",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "URI key of the extension"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "any JSON-legal data structure"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The original\nis unmodified."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if `key` does not match a name and is not uri-like."
      }
    ]
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "asSubStatement",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#asSubStatement",
    "access": "public",
    "description": "Makes this create a SubStatement (StatementBuilder makes Statements by\ndefault)\n\nYou do not have to call this to use a StatementBuilder as a SubStatement.\nJust pass another StatementBuilder to {@link StatementBuilder#withObject}\nand the conversion will be handled automatically.",
    "lineNumber": 2386,
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "returns the updated builder object. The\noriginal is unmodified."
    },
    "params": []
  },
  {
    "__docId__": 226,
    "kind": "get",
    "name": "activities",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#activities",
    "access": "public",
    "description": "An ActivityBuilder derived from this StatementBuilder, knowing about\nall the same Profiles.",
    "lineNumber": 2407,
    "type": {
      "nullable": null,
      "types": [
        "ActivityBuilder"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 227,
    "kind": "get",
    "name": "agents",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#agents",
    "access": "public",
    "description": "An AgentBuilder derived from this StatementBuilder, knowing about\nall the same Profiles.",
    "lineNumber": 2418,
    "type": {
      "nullable": null,
      "types": [
        "AgentBuilder"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 228,
    "kind": "get",
    "name": "attachments",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#attachments",
    "access": "public",
    "description": "An AttachmentBuilder derived from this StatementBuilder, knowing about\nall the same Profiles.",
    "lineNumber": 2428,
    "type": {
      "nullable": null,
      "types": [
        "AttachmentBuilder"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 229,
    "kind": "method",
    "name": "prebuild",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#prebuild",
    "access": "public",
    "description": "",
    "lineNumber": 2435,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "method",
    "name": "templated",
    "memberof": "src/builder.js~StatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~StatementBuilder#templated",
    "access": "public",
    "description": "Make this Statement follow the rules of a Statement template\n\nIf the Statement Template has `verb` or `objectActivityType` determining\nproperties, those are set on the Statement. When the Statement is built,\nall the rules of the Statement Template are checked, as well as the\npresence of all the determining properties.",
    "lineNumber": 2457,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{StatementBuilder} a Statement Template-validating\nStatementBuilder"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "uri",
          "string",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": "the URI, name, or full javascript\nobject representation of a Statement Template."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StatementBuilder"
      ],
      "spread": false,
      "description": "a Statement Template-validating\nStatementBuilder"
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "if a uri or string is passed in and there is no matching\nStatement Template."
      }
    ]
  },
  {
    "__docId__": 231,
    "kind": "class",
    "name": "SubStatementBuilder",
    "memberof": "src/builder.js",
    "static": true,
    "longname": "src/builder.js~SubStatementBuilder",
    "access": "public",
    "export": true,
    "importPath": "xapi-statement-builder/src/builder.js",
    "importStyle": "{SubStatementBuilder}",
    "description": "This class is returned when {@link StatementBuilder#asSubStatement} is called.\nIt makes sure the disallowed SubStatement properties (id, timestamp, version,\nand authority) are not set.",
    "lineNumber": 2608,
    "interface": false,
    "extends": [
      "StatementBuilder"
    ]
  },
  {
    "__docId__": 232,
    "kind": "method",
    "name": "withId",
    "memberof": "src/builder.js~SubStatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~SubStatementBuilder#withId",
    "access": "public",
    "description": "",
    "lineNumber": 2613,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 233,
    "kind": "method",
    "name": "withTimestamp",
    "memberof": "src/builder.js~SubStatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~SubStatementBuilder#withTimestamp",
    "access": "public",
    "description": "",
    "lineNumber": 2620,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 234,
    "kind": "method",
    "name": "withVersion",
    "memberof": "src/builder.js~SubStatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~SubStatementBuilder#withVersion",
    "access": "public",
    "description": "",
    "lineNumber": 2627,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "withAuthority",
    "memberof": "src/builder.js~SubStatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~SubStatementBuilder#withAuthority",
    "access": "public",
    "description": "",
    "lineNumber": 2634,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 236,
    "kind": "method",
    "name": "withAgentMethod",
    "memberof": "src/builder.js~SubStatementBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/builder.js~SubStatementBuilder#withAgentMethod",
    "access": "public",
    "description": "",
    "lineNumber": 2641,
    "ignore": true,
    "params": [
      {
        "name": "location",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 237,
    "kind": "file",
    "name": "src/index.js",
    "content": "export * from './builder';\n",
    "static": true,
    "longname": "/Users/rduhon/Documents/xapi-statement-builder/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 238,
    "kind": "file",
    "name": "src/oracle.js",
    "content": "import { Record, OrderedSet, fromJS, List } from 'immutable';\n\n/**\n* @ignore\n*/\nexport let uriOracle = {\n    lookup(identifier, objectType) {\n        if(identifier.indexOf(':') != -1) {\n            return {\n                id: identifier\n            }\n        }\n    },\n};\n\n/**\n* @ignore\n*/\nconst ProfileOracleBase = Record({\n    profile: null\n});\n\n/**\n* @ignore\n*/\nexport class ProfileOracle extends ProfileOracleBase {\n\n    matcher(identifier, objectType) {\n        identifier = identifier.toLowerCase();\n        const objectTypes = new Set([objectType]);\n        return (concept) => {\n            return objectTypes.has(concept.get('type')) && (\n                concept.get('id').toLowerCase() == identifier ||\n                concept.get('prefLabel').some(function(value) {\n                    return value.toLowerCase() == identifier;\n                }));\n        }\n    }\n\n    lookup(identifier, objectType) {\n        const matching = this.profile.get('lookups').filter(\n            this.matcher(identifier, objectType));\n        if(matching.count() == 1) { // only return unambiguous matches\n            return matching.get(0).toJS();\n        }\n\n    }\n\n    static fromProfile(profile) {\n        return new ProfileOracle({\n            profile: fromJS({\n                concepts: [], // empty defaults\n                templates: [],\n                patterns: []\n            }).merge(fromJS(profile))\n        }).update('profile', (profile) => {\n            const lookups = new List().concat(\n                profile.get(\"concepts\"),\n                profile.get(\"templates\"),\n                profile.get(\"patterns\")\n            );\n            return profile.set('lookups', lookups);\n        });\n    }\n}\n\n/**\n* @ignore\n*/\nconst CompositeOracleBase = Record({\n    oracles: OrderedSet()\n});\n\n/**\n* @ignore\n*/\nexport class CompositeOracle extends CompositeOracleBase {\n\n    add(oracle) {\n        return this.updateIn(['oracles'], oracles => oracles.add(oracle));\n    }\n\n    lookup(identifier, objectType) {\n        for(let oracle of this.oracles.reverse()) {\n            const result = oracle.lookup(identifier, objectType);\n            if(result) {\n                return result;\n            }\n        }\n        // return something else? raise? Currently the lookup method on\n        // Builders raises if nothing is returned\n    }\n}\n",
    "static": true,
    "longname": "/Users/rduhon/Documents/xapi-statement-builder/src/oracle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 239,
    "kind": "variable",
    "name": "uriOracle",
    "memberof": "src/oracle.js",
    "static": true,
    "longname": "src/oracle.js~uriOracle",
    "access": "public",
    "export": true,
    "importPath": "xapi-statement-builder/src/oracle.js",
    "importStyle": "{uriOracle}",
    "description": "",
    "lineNumber": 6,
    "ignore": true,
    "type": {
      "types": [
        "{\"lookup\": function}"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "variable",
    "name": "ProfileOracleBase",
    "memberof": "src/oracle.js",
    "static": true,
    "longname": "src/oracle.js~ProfileOracleBase",
    "access": "public",
    "export": false,
    "importPath": "xapi-statement-builder/src/oracle.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 19,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 241,
    "kind": "class",
    "name": "ProfileOracle",
    "memberof": "src/oracle.js",
    "static": true,
    "longname": "src/oracle.js~ProfileOracle",
    "access": "public",
    "export": true,
    "importPath": "xapi-statement-builder/src/oracle.js",
    "importStyle": "{ProfileOracle}",
    "description": "",
    "lineNumber": 26,
    "ignore": true,
    "interface": false,
    "extends": [
      "ProfileOracleBase"
    ]
  },
  {
    "__docId__": 242,
    "kind": "method",
    "name": "matcher",
    "memberof": "src/oracle.js~ProfileOracle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/oracle.js~ProfileOracle#matcher",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "identifier",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectType",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "method",
    "name": "lookup",
    "memberof": "src/oracle.js~ProfileOracle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/oracle.js~ProfileOracle#lookup",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "identifier",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectType",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "method",
    "name": "fromProfile",
    "memberof": "src/oracle.js~ProfileOracle",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/oracle.js~ProfileOracle.fromProfile",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [
      {
        "name": "profile",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "variable",
    "name": "CompositeOracleBase",
    "memberof": "src/oracle.js",
    "static": true,
    "longname": "src/oracle.js~CompositeOracleBase",
    "access": "public",
    "export": false,
    "importPath": "xapi-statement-builder/src/oracle.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 70,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "class",
    "name": "CompositeOracle",
    "memberof": "src/oracle.js",
    "static": true,
    "longname": "src/oracle.js~CompositeOracle",
    "access": "public",
    "export": true,
    "importPath": "xapi-statement-builder/src/oracle.js",
    "importStyle": "{CompositeOracle}",
    "description": "",
    "lineNumber": 77,
    "ignore": true,
    "interface": false,
    "extends": [
      "CompositeOracleBase"
    ]
  },
  {
    "__docId__": 247,
    "kind": "method",
    "name": "add",
    "memberof": "src/oracle.js~CompositeOracle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/oracle.js~CompositeOracle#add",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [
      {
        "name": "oracle",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "method",
    "name": "lookup",
    "memberof": "src/oracle.js~CompositeOracle",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/oracle.js~CompositeOracle#lookup",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "params": [
      {
        "name": "identifier",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectType",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "",
    "longname": "/Users/rduhon/Documents/xapi-statement-builder/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"xapi-statement-builder\",\n  \"version\": \"1.0.0\",\n  \"description\": \"A library for constructing Experience API Statements\",\n  \"main\": \"dist/xapi-statement-builder.js\",\n  \"module\": \"src/index.js\",\n  \"author\": \"Russell Duhon <fugu13@gmail.com>\",\n  \"license\": \"Apache-2.0\",\n  \"scripts\": {\n    \"build\": \"webpack\",\n    \"test\": \"mocha --compilers js:babel-register\",\n    \"docs\": \"esdoc\",\n    \"opendocs\": \"open ./docs/index.html\"\n  },\n  \"devDependencies\": {\n    \"babel\": \"^6.23.0\",\n    \"babel-preset-env\": \"^1.6.0\",\n    \"babel-register\": \"^6.24.1\",\n    \"chai\": \"^4.1.2\",\n    \"esdoc\": \"^1.0.2\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"jsverify\": \"^0.8.2\",\n    \"mocha\": \"^3.5.0\",\n    \"webpack\": \"^3.5.2\"\n  },\n  \"dependencies\": {\n    \"immutable\": \"^3.8.1\",\n    \"jsonpath\": \"^0.2.12\",\n    \"lodash\": \"^4.17.4\"\n  }\n}\n",
    "longname": "/Users/rduhon/Documents/xapi-statement-builder/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]